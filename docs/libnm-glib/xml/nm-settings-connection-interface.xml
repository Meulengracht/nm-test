<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libnm-glib-nm-settings-connection-interface">
<refmeta>
<refentrytitle role="top_of_page" id="libnm-glib-nm-settings-connection-interface.top_of_page">nm-settings-connection-interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNM-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>nm-settings-connection-interface</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libnm-glib-nm-settings-connection-interface.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="NM-SETTINGS-CONNECTION-INTERFACE-GET-INTERFACE--CAPS">NM_SETTINGS_CONNECTION_INTERFACE_GET_INTERFACE</link>(obj)
#define             <link linkend="NM-SETTINGS-CONNECTION-INTERFACE-UPDATED--CAPS">NM_SETTINGS_CONNECTION_INTERFACE_UPDATED</link>
#define             <link linkend="NM-SETTINGS-CONNECTION-INTERFACE-REMOVED--CAPS">NM_SETTINGS_CONNECTION_INTERFACE_REMOVED</link>
                    <link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link>;
<link linkend="void">void</link>                (<link linkend="NMSettingsConnectionInterfaceUpdateFunc">*NMSettingsConnectionInterfaceUpdateFunc</link>)
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                (<link linkend="NMSettingsConnectionInterfaceDeleteFunc">*NMSettingsConnectionInterfaceDeleteFunc</link>)
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                (<link linkend="NMSettingsConnectionInterfaceGetSecretsFunc">*NMSettingsConnectionInterfaceGetSecretsFunc</link>)
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="GHashTable">GHashTable</link> *secrets,
                                                         <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-settings-connection-interface-update">nm_settings_connection_interface_update</link>
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="NMSettingsConnectionInterfaceUpdateFunc">NMSettingsConnectionInterfaceUpdateFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-settings-connection-interface-delete">nm_settings_connection_interface_delete</link>
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="NMSettingsConnectionInterfaceDeleteFunc">NMSettingsConnectionInterfaceDeleteFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-settings-connection-interface-get-secrets">nm_settings_connection_interface_get_secrets</link>
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         const <link linkend="char">char</link> *setting_name,
                                                         const <link linkend="char">char</link> **hints,
                                                         <link linkend="gboolean">gboolean</link> request_new,
                                                         <link linkend="NMSettingsConnectionInterfaceGetSecretsFunc">NMSettingsConnectionInterfaceGetSecretsFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="nm-settings-connection-interface-emit-updated">nm_settings_connection_interface_emit_updated</link>
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libnm-glib-nm-settings-connection-interface.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libnm-glib-nm-settings-connection-interface.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="NM-SETTINGS-CONNECTION-INTERFACE-GET-INTERFACE--CAPS" role="macro">
<title>NM_SETTINGS_CONNECTION_INTERFACE_GET_INTERFACE()</title>
<indexterm zone="NM-SETTINGS-CONNECTION-INTERFACE-GET-INTERFACE--CAPS"><primary sortas="NM_SETTINGS_CONNECTION_INTERFACE_GET_INTERFACE">NM_SETTINGS_CONNECTION_INTERFACE_GET_INTERFACE</primary></indexterm><programlisting>#define NM_SETTINGS_CONNECTION_INTERFACE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), NM_TYPE_SETTINGS_CONNECTION_INTERFACE, NMSettingsConnectionInterface))
</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NM-SETTINGS-CONNECTION-INTERFACE-UPDATED--CAPS" role="macro">
<title>NM_SETTINGS_CONNECTION_INTERFACE_UPDATED</title>
<indexterm zone="NM-SETTINGS-CONNECTION-INTERFACE-UPDATED--CAPS"><primary sortas="NM_SETTINGS_CONNECTION_INTERFACE_UPDATED">NM_SETTINGS_CONNECTION_INTERFACE_UPDATED</primary></indexterm><programlisting>#define NM_SETTINGS_CONNECTION_INTERFACE_UPDATED               "updated"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTINGS-CONNECTION-INTERFACE-REMOVED--CAPS" role="macro">
<title>NM_SETTINGS_CONNECTION_INTERFACE_REMOVED</title>
<indexterm zone="NM-SETTINGS-CONNECTION-INTERFACE-REMOVED--CAPS"><primary sortas="NM_SETTINGS_CONNECTION_INTERFACE_REMOVED">NM_SETTINGS_CONNECTION_INTERFACE_REMOVED</primary></indexterm><programlisting>#define NM_SETTINGS_CONNECTION_INTERFACE_REMOVED               "removed"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSettingsConnectionInterface" role="struct">
<title>NMSettingsConnectionInterface</title>
<indexterm zone="NMSettingsConnectionInterface"><primary sortas="NMSettingsConnectionInterface">NMSettingsConnectionInterface</primary></indexterm><programlisting>typedef struct {
	GTypeInterface g_iface;

	/* Methods */
	gboolean (*update) (NMSettingsConnectionInterface *connection,
	                    NMSettingsConnectionInterfaceUpdateFunc callback,
	                    gpointer user_data);

	gboolean (*delete) (NMSettingsConnectionInterface *connection,
	                    NMSettingsConnectionInterfaceDeleteFunc callback,
	                    gpointer user_data);

	gboolean (*get_secrets) (NMSettingsConnectionInterface *connection,
	                         const char *setting_name,
                             const char **hints,
                             gboolean request_new,
                             NMSettingsConnectionInterfaceGetSecretsFunc callback,
                             gpointer user_data);

	void (*emit_updated) (NMSettingsConnectionInterface *connection);

	/* Signals */
	/* 'new_settings' hash should *not* contain secrets */
	void (*updated) (NMSettingsConnectionInterface *connection,
	                 GHashTable *new_settings);

	void (*removed) (NMSettingsConnectionInterface *connection);

	/* Padding for future expansion */
	void (*_reserved1) (void);
	void (*_reserved2) (void);
	void (*_reserved3) (void);
	void (*_reserved4) (void);
	void (*_reserved5) (void);
	void (*_reserved6) (void);
} NMSettingsConnectionInterface;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSettingsConnectionInterfaceUpdateFunc" role="function">
<title>NMSettingsConnectionInterfaceUpdateFunc ()</title>
<indexterm zone="NMSettingsConnectionInterfaceUpdateFunc"><primary sortas="NMSettingsConnectionInterfaceUpdateFunc">NMSettingsConnectionInterfaceUpdateFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*NMSettingsConnectionInterfaceUpdateFunc)
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NMSettingsConnectionInterfaceDeleteFunc" role="function">
<title>NMSettingsConnectionInterfaceDeleteFunc ()</title>
<indexterm zone="NMSettingsConnectionInterfaceDeleteFunc"><primary sortas="NMSettingsConnectionInterfaceDeleteFunc">NMSettingsConnectionInterfaceDeleteFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*NMSettingsConnectionInterfaceDeleteFunc)
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NMSettingsConnectionInterfaceGetSecretsFunc" role="function">
<title>NMSettingsConnectionInterfaceGetSecretsFunc ()</title>
<indexterm zone="NMSettingsConnectionInterfaceGetSecretsFunc"><primary sortas="NMSettingsConnectionInterfaceGetSecretsFunc">NMSettingsConnectionInterfaceGetSecretsFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*NMSettingsConnectionInterfaceGetSecretsFunc)
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="GHashTable">GHashTable</link> *secrets,
                                                         <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>secrets</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-settings-connection-interface-update" role="function">
<title>nm_settings_connection_interface_update ()</title>
<indexterm zone="nm-settings-connection-interface-update"><primary sortas="nm_settings_connection_interface_update">nm_settings_connection_interface_update</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_settings_connection_interface_update
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="NMSettingsConnectionInterfaceUpdateFunc">NMSettingsConnectionInterfaceUpdateFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Update the connection with current settings and properties.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara> an object implementing <link linkend="NMSettingsConnectionInterface"><type>NMSettingsConnectionInterface</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> a function to be called when the update completes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> caller-specific data to be passed to <parameter>callback</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE on failure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-settings-connection-interface-delete" role="function">
<title>nm_settings_connection_interface_delete ()</title>
<indexterm zone="nm-settings-connection-interface-delete"><primary sortas="nm_settings_connection_interface_delete">nm_settings_connection_interface_delete</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_settings_connection_interface_delete
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         <link linkend="NMSettingsConnectionInterfaceDeleteFunc">NMSettingsConnectionInterfaceDeleteFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Delete the connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara> a objecting implementing <link linkend="NMSettingsConnectionInterface"><type>NMSettingsConnectionInterface</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> a function to be called when the delete completes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> caller-specific data to be passed to <parameter>callback</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE on failure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-settings-connection-interface-get-secrets" role="function">
<title>nm_settings_connection_interface_get_secrets ()</title>
<indexterm zone="nm-settings-connection-interface-get-secrets"><primary sortas="nm_settings_connection_interface_get_secrets">nm_settings_connection_interface_get_secrets</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_settings_connection_interface_get_secrets
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection,
                                                         const <link linkend="char">char</link> *setting_name,
                                                         const <link linkend="char">char</link> **hints,
                                                         <link linkend="gboolean">gboolean</link> request_new,
                                                         <link linkend="NMSettingsConnectionInterfaceGetSecretsFunc">NMSettingsConnectionInterfaceGetSecretsFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Request the connection's secrets.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara> a object implementing <link linkend="NMSettingsConnectionInterface"><type>NMSettingsConnectionInterface</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting_name</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting"><type>NMSetting</type></link> object name to get secrets for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hints</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NMSetting"><type>NMSetting</type></link> key names to get secrets for (optional)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>request_new</parameter>&#160;:</term>
<listitem><simpara> hint that new secrets (instead of cached or stored secrets) 
 should be returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> a function to be called when the update completes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> caller-specific data to be passed to <parameter>callback</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE on failure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-settings-connection-interface-emit-updated" role="function">
<title>nm_settings_connection_interface_emit_updated ()</title>
<indexterm zone="nm-settings-connection-interface-emit-updated"><primary sortas="nm_settings_connection_interface_emit_updated">nm_settings_connection_interface_emit_updated</primary></indexterm><programlisting><link linkend="void">void</link>                nm_settings_connection_interface_emit_updated
                                                        (<link linkend="NMSettingsConnectionInterface">NMSettingsConnectionInterface</link> *connection);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
