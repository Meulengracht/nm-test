<refentry id="NMSetting8021x">
<refmeta>
<refentrytitle role="top_of_page" id="NMSetting8021x.top_of_page">NMSetting8021x</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNM-UTIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>NMSetting8021x</refname>
<refpurpose>Describes 802.1x-authenticated connection properties</refpurpose>
</refnamediv>

<refsynopsisdiv id="NMSetting8021x.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;nm-setting-8021x.h&gt;

enum                <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link>;
enum                <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>;
#define             <link linkend="NM-SETTING-802-1X-SETTING-NAME--CAPS">NM_SETTING_802_1X_SETTING_NAME</link>
enum                <link linkend="NMSetting8021xError">NMSetting8021xError</link>;
#define             <link linkend="NM-TYPE-SETTING-802-1X-ERROR--CAPS">NM_TYPE_SETTING_802_1X_ERROR</link>
#define             <link linkend="NM-SETTING-802-1X-ERROR--CAPS">NM_SETTING_802_1X_ERROR</link>
<link linkend="GQuark">GQuark</link>              <link linkend="nm-setting-802-1x-error-quark">nm_setting_802_1x_error_quark</link>       (void);
#define             <link linkend="NM-SETTING-802-1X-EAP--CAPS">NM_SETTING_802_1X_EAP</link>
#define             <link linkend="NM-SETTING-802-1X-IDENTITY--CAPS">NM_SETTING_802_1X_IDENTITY</link>
#define             <link linkend="NM-SETTING-802-1X-ANONYMOUS-IDENTITY--CAPS">NM_SETTING_802_1X_ANONYMOUS_IDENTITY</link>
#define             <link linkend="NM-SETTING-802-1X-CA-CERT--CAPS">NM_SETTING_802_1X_CA_CERT</link>
#define             <link linkend="NM-SETTING-802-1X-CA-PATH--CAPS">NM_SETTING_802_1X_CA_PATH</link>
#define             <link linkend="NM-SETTING-802-1X-CLIENT-CERT--CAPS">NM_SETTING_802_1X_CLIENT_CERT</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE1-PEAPVER--CAPS">NM_SETTING_802_1X_PHASE1_PEAPVER</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE1-PEAPLABEL--CAPS">NM_SETTING_802_1X_PHASE1_PEAPLABEL</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE1-FAST-PROVISIONING--CAPS">NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-AUTH--CAPS">NM_SETTING_802_1X_PHASE2_AUTH</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-AUTHEAP--CAPS">NM_SETTING_802_1X_PHASE2_AUTHEAP</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-CA-CERT--CAPS">NM_SETTING_802_1X_PHASE2_CA_CERT</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-CA-PATH--CAPS">NM_SETTING_802_1X_PHASE2_CA_PATH</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-CLIENT-CERT--CAPS">NM_SETTING_802_1X_PHASE2_CLIENT_CERT</link>
#define             <link linkend="NM-SETTING-802-1X-PASSWORD--CAPS">NM_SETTING_802_1X_PASSWORD</link>
#define             <link linkend="NM-SETTING-802-1X-PRIVATE-KEY--CAPS">NM_SETTING_802_1X_PRIVATE_KEY</link>
#define             <link linkend="NM-SETTING-802-1X-PRIVATE-KEY-PASSWORD--CAPS">NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-PRIVATE-KEY--CAPS">NM_SETTING_802_1X_PHASE2_PRIVATE_KEY</link>
#define             <link linkend="NM-SETTING-802-1X-PHASE2-PRIVATE-KEY-PASSWORD--CAPS">NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD</link>
#define             <link linkend="NM-SETTING-802-1X-PIN--CAPS">NM_SETTING_802_1X_PIN</link>
#define             <link linkend="NM-SETTING-802-1X-PSK--CAPS">NM_SETTING_802_1X_PSK</link>
#define             <link linkend="NM-SETTING-802-1X-SYSTEM-CA-CERTS--CAPS">NM_SETTING_802_1X_SYSTEM_CA_CERTS</link>
                    <link linkend="NMSetting8021x-struct">NMSetting8021x</link>;
<link linkend="GType">GType</link>               <link linkend="nm-setting-802-1x-get-type">nm_setting_802_1x_get_type</link>          (void);
<link linkend="NMSetting">NMSetting</link> *         <link linkend="nm-setting-802-1x-new">nm_setting_802_1x_new</link>               (void);
<link linkend="guint32">guint32</link>             <link linkend="nm-setting-802-1x-get-num-eap-methods">nm_setting_802_1x_get_num_eap_methods</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-eap-method">nm_setting_802_1x_get_eap_method</link>    (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-add-eap-method">nm_setting_802_1x_add_eap_method</link>    (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *eap);
<link linkend="void">void</link>                <link linkend="nm-setting-802-1x-remove-eap-method">nm_setting_802_1x_remove_eap_method</link> (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="void">void</link>                <link linkend="nm-setting-802-1x-clear-eap-methods">nm_setting_802_1x_clear_eap_methods</link> (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-identity">nm_setting_802_1x_get_identity</link>      (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-anonymous-identity">nm_setting_802_1x_get_anonymous_identity</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-get-system-ca-certs">nm_setting_802_1x_get_system_ca_certs</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-ca-path">nm_setting_802_1x_get_ca_path</link>       (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-ca-path">nm_setting_802_1x_get_phase2_ca_path</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  <link linkend="nm-setting-802-1x-get-ca-cert-scheme">nm_setting_802_1x_get_ca_cert_scheme</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-ca-cert-blob">nm_setting_802_1x_get_ca_cert_blob</link>  (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-ca-cert-path">nm_setting_802_1x_get_ca_cert_path</link>  (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-ca-cert">nm_setting_802_1x_set_ca_cert</link>       (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  <link linkend="nm-setting-802-1x-get-client-cert-scheme">nm_setting_802_1x_get_client_cert_scheme</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-client-cert-blob">nm_setting_802_1x_get_client_cert_blob</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-client-cert-path">nm_setting_802_1x_get_client_cert_path</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-client-cert">nm_setting_802_1x_set_client_cert</link>   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase1-peapver">nm_setting_802_1x_get_phase1_peapver</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase1-peaplabel">nm_setting_802_1x_get_phase1_peaplabel</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase1-fast-provisioning">nm_setting_802_1x_get_phase1_fast_provisioning</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-auth">nm_setting_802_1x_get_phase2_auth</link>   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-autheap">nm_setting_802_1x_get_phase2_autheap</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  <link linkend="nm-setting-802-1x-get-phase2-ca-cert-scheme">nm_setting_802_1x_get_phase2_ca_cert_scheme</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-phase2-ca-cert-blob">nm_setting_802_1x_get_phase2_ca_cert_blob</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-ca-cert-path">nm_setting_802_1x_get_phase2_ca_cert_path</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-phase2-ca-cert">nm_setting_802_1x_set_phase2_ca_cert</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  <link linkend="nm-setting-802-1x-get-phase2-client-cert-scheme">nm_setting_802_1x_get_phase2_client_cert_scheme</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-phase2-client-cert-blob">nm_setting_802_1x_get_phase2_client_cert_blob</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-client-cert-path">nm_setting_802_1x_get_phase2_client_cert_path</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-phase2-client-cert">nm_setting_802_1x_set_phase2_client_cert</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-password">nm_setting_802_1x_get_password</link>      (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-pin">nm_setting_802_1x_get_pin</link>           (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-psk">nm_setting_802_1x_get_psk</link>           (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  <link linkend="nm-setting-802-1x-get-private-key-scheme">nm_setting_802_1x_get_private_key_scheme</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-private-key-blob">nm_setting_802_1x_get_private_key_blob</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-private-key-path">nm_setting_802_1x_get_private_key_path</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-private-key">nm_setting_802_1x_set_private_key</link>   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-private-key-password">nm_setting_802_1x_get_private_key_password</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link>  <link linkend="nm-setting-802-1x-get-private-key-format">nm_setting_802_1x_get_private_key_format</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  <link linkend="nm-setting-802-1x-get-phase2-private-key-scheme">nm_setting_802_1x_get_phase2_private_key_scheme</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-phase2-private-key-blob">nm_setting_802_1x_get_phase2_private_key_blob</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-private-key-path">nm_setting_802_1x_get_phase2_private_key_path</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-phase2-private-key">nm_setting_802_1x_set_phase2_private_key</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="char">char</link> *        <link linkend="nm-setting-802-1x-get-phase2-private-key-password">nm_setting_802_1x_get_phase2_private_key_password</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link>  <link linkend="nm-setting-802-1x-get-phase2-private-key-format">nm_setting_802_1x_get_phase2_private_key_format</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
enum                <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link>;
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-ca-cert">nm_setting_802_1x_get_ca_cert</link>       (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-ca-cert-from-file">nm_setting_802_1x_set_ca_cert_from_file</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-client-cert">nm_setting_802_1x_get_client_cert</link>   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-client-cert-from-file">nm_setting_802_1x_set_client_cert_from_file</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-phase2-ca-cert">nm_setting_802_1x_get_phase2_ca_cert</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-phase2-ca-cert-from-file">nm_setting_802_1x_set_phase2_ca_cert_from_file</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-phase2-client-cert">nm_setting_802_1x_get_phase2_client_cert</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-phase2-client-cert-from-file">nm_setting_802_1x_set_phase2_client_cert_from_file</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-private-key">nm_setting_802_1x_get_private_key</link>   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-private-key-from-file">nm_setting_802_1x_set_private_key_from_file</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link>  <link linkend="nm-setting-802-1x-get-private-key-type">nm_setting_802_1x_get_private_key_type</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-802-1x-get-phase2-private-key">nm_setting_802_1x_get_phase2_private_key</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-802-1x-set-phase2-private-key-from-file">nm_setting_802_1x_set_phase2_private_key_from_file</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link>  <link linkend="nm-setting-802-1x-get-phase2-private-key-type">nm_setting_802_1x_get_phase2_private_key_type</link>
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);
</synopsis>
</refsynopsisdiv>

<refsect1 id="NMSetting8021x.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="NMSetting">NMSetting</link>
         +----NMSetting8021x
</synopsis>
</refsect1>





<refsect1 id="NMSetting8021x.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="NMSetting8021x--anonymous-identity">anonymous-identity</link>&quot;       <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--ca-cert">ca-cert</link>&quot;                  <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSetting8021x--ca-path">ca-path</link>&quot;                  <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--client-cert">client-cert</link>&quot;              <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSetting8021x--eap">eap</link>&quot;                      <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write
  &quot;<link linkend="NMSetting8021x--identity">identity</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--password">password</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase1-fast-provisioning">phase1-fast-provisioning</link>&quot; <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase1-peaplabel">phase1-peaplabel</link>&quot;         <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase1-peapver">phase1-peapver</link>&quot;           <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-auth">phase2-auth</link>&quot;              <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-autheap">phase2-autheap</link>&quot;           <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-ca-cert">phase2-ca-cert</link>&quot;           <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-ca-path">phase2-ca-path</link>&quot;           <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-client-cert">phase2-client-cert</link>&quot;       <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-private-key">phase2-private-key</link>&quot;       <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSetting8021x--phase2-private-key-password">phase2-private-key-password</link>&quot; <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--private-key">private-key</link>&quot;              <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSetting8021x--private-key-password">private-key-password</link>&quot;     <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSetting8021x--system-ca-certs">system-ca-certs</link>&quot;          <link linkend="gboolean">gboolean</link>              : Read / Write / Construct
</synopsis>
</refsect1>



<refsect1 id="NMSetting8021x.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link> object is a <link linkend="NMSetting"><type>NMSetting</type></link> subclass that describes
properties necessary for connection to 802.1x-authenticated networks, such as
WPA and WPA2 Enterprise WiFi networks and wired 802.1x networks.  802.1x
connections typically use certificates and/or EAP authentication methods to
securely verify, identify, and authenticate the client to the network itself,
instead of simply relying on a widely shared static key.
</para>
<para>
It's a good idea to read up on wpa_supplicant configuration before using this
setting extensively, since most of the options here correspond closely with
the relevant wpa_supplicant configuration options.
</para>
<para>
Furthermore, to get a good idea of 802.1x, EAP, TLS, TTLS, etc and their
applications to WiFi and wired networks, you'll want to get copies of the
following books.
</para>
<para>
 802.11 Wireless Networks: The Definitive Guide, Second Edition
      Author: Matthew Gast
      ISBN: 978-0596100520
</para>
<para>
 Cisco Wireless LAN Security
      Authors: Krishna Sankar, Sri Sundaralingam, Darrin Miller, and Andrew Balinsky
      ISBN: 978-1587051548</para>
<para>
</para>
</refsect1>

<refsect1 id="NMSetting8021x.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="NMSetting8021xCKFormat" role="enum">
<title>enum NMSetting8021xCKFormat</title>
<indexterm zone="NMSetting8021xCKFormat"><primary sortas="NMSetting8021xCKFormat">NMSetting8021xCKFormat</primary></indexterm><programlisting>typedef enum {
	NM_SETTING_802_1X_CK_FORMAT_UNKNOWN = 0,
	NM_SETTING_802_1X_CK_FORMAT_X509,
	NM_SETTING_802_1X_CK_FORMAT_RAW_KEY,
	NM_SETTING_802_1X_CK_FORMAT_PKCS12
} NMSetting8021xCKFormat;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021xCKScheme" role="enum">
<title>enum NMSetting8021xCKScheme</title>
<indexterm zone="NMSetting8021xCKScheme"><primary sortas="NMSetting8021xCKScheme">NMSetting8021xCKScheme</primary></indexterm><programlisting>typedef enum {
	NM_SETTING_802_1X_CK_SCHEME_UNKNOWN = 0,
	NM_SETTING_802_1X_CK_SCHEME_BLOB,
	NM_SETTING_802_1X_CK_SCHEME_PATH
} NMSetting8021xCKScheme;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-SETTING-NAME--CAPS" role="macro">
<title>NM_SETTING_802_1X_SETTING_NAME</title>
<indexterm zone="NM-SETTING-802-1X-SETTING-NAME--CAPS"><primary sortas="NM_SETTING_802_1X_SETTING_NAME">NM_SETTING_802_1X_SETTING_NAME</primary></indexterm><programlisting>#define NM_SETTING_802_1X_SETTING_NAME "802-1x"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021xError" role="enum">
<title>enum NMSetting8021xError</title>
<indexterm zone="NMSetting8021xError"><primary sortas="NMSetting8021xError">NMSetting8021xError</primary></indexterm><programlisting>typedef enum
{
	NM_SETTING_802_1X_ERROR_UNKNOWN = 0,
	NM_SETTING_802_1X_ERROR_INVALID_PROPERTY,
	NM_SETTING_802_1X_ERROR_MISSING_PROPERTY
} NMSetting8021xError;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-TYPE-SETTING-802-1X-ERROR--CAPS" role="macro">
<title>NM_TYPE_SETTING_802_1X_ERROR</title>
<indexterm zone="NM-TYPE-SETTING-802-1X-ERROR--CAPS"><primary sortas="NM_TYPE_SETTING_802_1X_ERROR">NM_TYPE_SETTING_802_1X_ERROR</primary></indexterm><programlisting>#define NM_TYPE_SETTING_802_1X_ERROR (nm_setting_802_1x_error_get_type ()) 
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-ERROR--CAPS" role="macro">
<title>NM_SETTING_802_1X_ERROR</title>
<indexterm zone="NM-SETTING-802-1X-ERROR--CAPS"><primary sortas="NM_SETTING_802_1X_ERROR">NM_SETTING_802_1X_ERROR</primary></indexterm><programlisting>#define NM_SETTING_802_1X_ERROR nm_setting_802_1x_error_quark ()
</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-802-1x-error-quark" role="function">
<title>nm_setting_802_1x_error_quark ()</title>
<indexterm zone="nm-setting-802-1x-error-quark"><primary sortas="nm_setting_802_1x_error_quark">nm_setting_802_1x_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              nm_setting_802_1x_error_quark       (void);</programlisting>
<para>
Registers an error quark for <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link> if necessary.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the error quark used for <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link> errors.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NM-SETTING-802-1X-EAP--CAPS" role="macro">
<title>NM_SETTING_802_1X_EAP</title>
<indexterm zone="NM-SETTING-802-1X-EAP--CAPS"><primary sortas="NM_SETTING_802_1X_EAP">NM_SETTING_802_1X_EAP</primary></indexterm><programlisting>#define NM_SETTING_802_1X_EAP "eap"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-IDENTITY--CAPS" role="macro">
<title>NM_SETTING_802_1X_IDENTITY</title>
<indexterm zone="NM-SETTING-802-1X-IDENTITY--CAPS"><primary sortas="NM_SETTING_802_1X_IDENTITY">NM_SETTING_802_1X_IDENTITY</primary></indexterm><programlisting>#define NM_SETTING_802_1X_IDENTITY "identity"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-ANONYMOUS-IDENTITY--CAPS" role="macro">
<title>NM_SETTING_802_1X_ANONYMOUS_IDENTITY</title>
<indexterm zone="NM-SETTING-802-1X-ANONYMOUS-IDENTITY--CAPS"><primary sortas="NM_SETTING_802_1X_ANONYMOUS_IDENTITY">NM_SETTING_802_1X_ANONYMOUS_IDENTITY</primary></indexterm><programlisting>#define NM_SETTING_802_1X_ANONYMOUS_IDENTITY "anonymous-identity"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-CA-CERT--CAPS" role="macro">
<title>NM_SETTING_802_1X_CA_CERT</title>
<indexterm zone="NM-SETTING-802-1X-CA-CERT--CAPS"><primary sortas="NM_SETTING_802_1X_CA_CERT">NM_SETTING_802_1X_CA_CERT</primary></indexterm><programlisting>#define NM_SETTING_802_1X_CA_CERT "ca-cert"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-CA-PATH--CAPS" role="macro">
<title>NM_SETTING_802_1X_CA_PATH</title>
<indexterm zone="NM-SETTING-802-1X-CA-PATH--CAPS"><primary sortas="NM_SETTING_802_1X_CA_PATH">NM_SETTING_802_1X_CA_PATH</primary></indexterm><programlisting>#define NM_SETTING_802_1X_CA_PATH "ca-path"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-CLIENT-CERT--CAPS" role="macro">
<title>NM_SETTING_802_1X_CLIENT_CERT</title>
<indexterm zone="NM-SETTING-802-1X-CLIENT-CERT--CAPS"><primary sortas="NM_SETTING_802_1X_CLIENT_CERT">NM_SETTING_802_1X_CLIENT_CERT</primary></indexterm><programlisting>#define NM_SETTING_802_1X_CLIENT_CERT "client-cert"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE1-PEAPVER--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE1_PEAPVER</title>
<indexterm zone="NM-SETTING-802-1X-PHASE1-PEAPVER--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE1_PEAPVER">NM_SETTING_802_1X_PHASE1_PEAPVER</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE1_PEAPVER "phase1-peapver"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE1-PEAPLABEL--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE1_PEAPLABEL</title>
<indexterm zone="NM-SETTING-802-1X-PHASE1-PEAPLABEL--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE1_PEAPLABEL">NM_SETTING_802_1X_PHASE1_PEAPLABEL</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE1_PEAPLABEL "phase1-peaplabel"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE1-FAST-PROVISIONING--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING</title>
<indexterm zone="NM-SETTING-802-1X-PHASE1-FAST-PROVISIONING--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING">NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING "phase1-fast-provisioning"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-AUTH--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_AUTH</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-AUTH--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_AUTH">NM_SETTING_802_1X_PHASE2_AUTH</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_AUTH "phase2-auth"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-AUTHEAP--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_AUTHEAP</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-AUTHEAP--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_AUTHEAP">NM_SETTING_802_1X_PHASE2_AUTHEAP</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_AUTHEAP "phase2-autheap"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-CA-CERT--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_CA_CERT</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-CA-CERT--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_CA_CERT">NM_SETTING_802_1X_PHASE2_CA_CERT</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_CA_CERT "phase2-ca-cert"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-CA-PATH--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_CA_PATH</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-CA-PATH--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_CA_PATH">NM_SETTING_802_1X_PHASE2_CA_PATH</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_CA_PATH "phase2-ca-path"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-CLIENT-CERT--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_CLIENT_CERT</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-CLIENT-CERT--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_CLIENT_CERT">NM_SETTING_802_1X_PHASE2_CLIENT_CERT</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_CLIENT_CERT "phase2-client-cert"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PASSWORD--CAPS" role="macro">
<title>NM_SETTING_802_1X_PASSWORD</title>
<indexterm zone="NM-SETTING-802-1X-PASSWORD--CAPS"><primary sortas="NM_SETTING_802_1X_PASSWORD">NM_SETTING_802_1X_PASSWORD</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PASSWORD "password"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PRIVATE-KEY--CAPS" role="macro">
<title>NM_SETTING_802_1X_PRIVATE_KEY</title>
<indexterm zone="NM-SETTING-802-1X-PRIVATE-KEY--CAPS"><primary sortas="NM_SETTING_802_1X_PRIVATE_KEY">NM_SETTING_802_1X_PRIVATE_KEY</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PRIVATE_KEY "private-key"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PRIVATE-KEY-PASSWORD--CAPS" role="macro">
<title>NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD</title>
<indexterm zone="NM-SETTING-802-1X-PRIVATE-KEY-PASSWORD--CAPS"><primary sortas="NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD">NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD "private-key-password"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-PRIVATE-KEY--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_PRIVATE_KEY</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-PRIVATE-KEY--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_PRIVATE_KEY">NM_SETTING_802_1X_PHASE2_PRIVATE_KEY</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_PRIVATE_KEY "phase2-private-key"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PHASE2-PRIVATE-KEY-PASSWORD--CAPS" role="macro">
<title>NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD</title>
<indexterm zone="NM-SETTING-802-1X-PHASE2-PRIVATE-KEY-PASSWORD--CAPS"><primary sortas="NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD">NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD "phase2-private-key-password"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PIN--CAPS" role="macro">
<title>NM_SETTING_802_1X_PIN</title>
<indexterm zone="NM-SETTING-802-1X-PIN--CAPS"><primary sortas="NM_SETTING_802_1X_PIN">NM_SETTING_802_1X_PIN</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PIN "pin"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-PSK--CAPS" role="macro">
<title>NM_SETTING_802_1X_PSK</title>
<indexterm zone="NM-SETTING-802-1X-PSK--CAPS"><primary sortas="NM_SETTING_802_1X_PSK">NM_SETTING_802_1X_PSK</primary></indexterm><programlisting>#define NM_SETTING_802_1X_PSK "psk"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-802-1X-SYSTEM-CA-CERTS--CAPS" role="macro">
<title>NM_SETTING_802_1X_SYSTEM_CA_CERTS</title>
<indexterm zone="NM-SETTING-802-1X-SYSTEM-CA-CERTS--CAPS"><primary sortas="NM_SETTING_802_1X_SYSTEM_CA_CERTS">NM_SETTING_802_1X_SYSTEM_CA_CERTS</primary></indexterm><programlisting>#define NM_SETTING_802_1X_SYSTEM_CA_CERTS "system-ca-certs"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x-struct" role="struct">
<title>NMSetting8021x</title>
<indexterm zone="NMSetting8021x-struct"><primary sortas="NMSetting8021x">NMSetting8021x</primary></indexterm><programlisting>typedef struct _NMSetting8021x NMSetting8021x;</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-802-1x-get-type" role="function">
<title>nm_setting_802_1x_get_type ()</title>
<indexterm zone="nm-setting-802-1x-get-type"><primary sortas="nm_setting_802_1x_get_type">nm_setting_802_1x_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               nm_setting_802_1x_get_type          (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-new" role="function">
<title>nm_setting_802_1x_new ()</title>
<indexterm zone="nm-setting-802-1x-new"><primary sortas="nm_setting_802_1x_new">nm_setting_802_1x_new</primary></indexterm><programlisting><link linkend="NMSetting">NMSetting</link> *         nm_setting_802_1x_new               (void);</programlisting>
<para>
Creates a new <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link> object with default values.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new empty <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link> object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-num-eap-methods" role="function">
<title>nm_setting_802_1x_get_num_eap_methods ()</title>
<indexterm zone="nm-setting-802-1x-get-num-eap-methods"><primary sortas="nm_setting_802_1x_get_num_eap_methods">nm_setting_802_1x_get_num_eap_methods</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             nm_setting_802_1x_get_num_eap_methods
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the number of eap methods allowed for use when connecting to the
network.  Generally only one EAP method is used.  Use the functions
<link linkend="nm-setting-802-1x-get-eap-method"><function>nm_setting_802_1x_get_eap_method()</function></link>, <link linkend="nm-setting-802-1x-add-eap-method"><function>nm_setting_802_1x_add_eap_method()</function></link>,
and <link linkend="nm-setting-802-1x-remove-eap-method"><function>nm_setting_802_1x_remove_eap_method()</function></link> for adding, removing, and retrieving
allowed EAP methods.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the number of allowed EAP methods
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-eap-method" role="function">
<title>nm_setting_802_1x_get_eap_method ()</title>
<indexterm zone="nm-setting-802-1x-get-eap-method"><primary sortas="nm_setting_802_1x_get_eap_method">nm_setting_802_1x_get_eap_method</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_eap_method    (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
Returns the name of the allowed EAP method at index <parameter>i</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara> the index of the EAP method name to return
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the name of the allowed EAP method at index <parameter>i</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-add-eap-method" role="function">
<title>nm_setting_802_1x_add_eap_method ()</title>
<indexterm zone="nm-setting-802-1x-add-eap-method"><primary sortas="nm_setting_802_1x_add_eap_method">nm_setting_802_1x_add_eap_method</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_add_eap_method    (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *eap);</programlisting>
<para>
Adds an allowed EAP method.  The setting is not valid until at least one
EAP method has been added.  See <link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property for a list of
allowed EAP methods.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>eap</parameter>&#160;:</term>
<listitem><simpara> the name of the EAP method to allow for this connection
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the EAP method was successfully added, FALSE if it was
 not a valid method or if it was already allowed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-remove-eap-method" role="function">
<title>nm_setting_802_1x_remove_eap_method ()</title>
<indexterm zone="nm-setting-802-1x-remove-eap-method"><primary sortas="nm_setting_802_1x_remove_eap_method">nm_setting_802_1x_remove_eap_method</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_802_1x_remove_eap_method (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
Removes the allowed EAP method at the specified index.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara> the index of the EAP method to remove
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-clear-eap-methods" role="function">
<title>nm_setting_802_1x_clear_eap_methods ()</title>
<indexterm zone="nm-setting-802-1x-clear-eap-methods"><primary sortas="nm_setting_802_1x_clear_eap_methods">nm_setting_802_1x_clear_eap_methods</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_802_1x_clear_eap_methods (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Clears all allowed EAP methods.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-identity" role="function">
<title>nm_setting_802_1x_get_identity ()</title>
<indexterm zone="nm-setting-802-1x-get-identity"><primary sortas="nm_setting_802_1x_get_identity">nm_setting_802_1x_get_identity</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_identity      (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the identifier used by some EAP methods (like TLS) to
authenticate the user.  Often this is a username or login name.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the user identifier
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-anonymous-identity" role="function">
<title>nm_setting_802_1x_get_anonymous_identity ()</title>
<indexterm zone="nm-setting-802-1x-get-anonymous-identity"><primary sortas="nm_setting_802_1x_get_anonymous_identity">nm_setting_802_1x_get_anonymous_identity</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_anonymous_identity
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the anonymous identifier used by some EAP methods (like TTLS) to
authenticate the user in the outer unencrypted "phase 1" authentication.  The
inner "phase 2" authentication will use the <link linkend="NMSetting8021x--identity"><type>"identity"</type></link> in
a secure form, if applicable for that EAP method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the anonymous identifier
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-system-ca-certs" role="function">
<title>nm_setting_802_1x_get_system_ca_certs ()</title>
<indexterm zone="nm-setting-802-1x-get-system-ca-certs"><primary sortas="nm_setting_802_1x_get_system_ca_certs">nm_setting_802_1x_get_system_ca_certs</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_get_system_ca_certs
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Sets the <link linkend="NMSetting8021x--system-ca-certs"><type>"system-ca-certs"</type></link> property. The
<link linkend="NMSetting8021x--ca-path"><type>"ca-path"</type></link> and <link linkend="NMSetting8021x--phase2-ca-path"><type>"phase2-ca-path"</type></link>
properties are ignored if the <link linkend="NMSetting8021x--system-ca-certs"><type>"system-ca-certs"</type></link> property is
TRUE, in which case a system-wide CA certificate directory specified at
compile time (using the --system-ca-path configure option) is used in place
of these properties.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if a system CA certificate path should be used, FALSE if not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-ca-path" role="function">
<title>nm_setting_802_1x_get_ca_path ()</title>
<indexterm zone="nm-setting-802-1x-get-ca-path"><primary sortas="nm_setting_802_1x_get_ca_path">nm_setting_802_1x_get_ca_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_ca_path       (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the path of the CA certificate directory if previously set.  Systems
will often have a directory that contains multiple individual CA certificates
which the supplicant can then add to the verification chain.  This may be
used in addition to the <link linkend="NMSetting8021x--ca-cert"><type>"ca-cert"</type></link> property to add more CA
certificates for verifying the network to client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the CA certificate directory path
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-ca-path" role="function">
<title>nm_setting_802_1x_get_phase2_ca_path ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-ca-path"><primary sortas="nm_setting_802_1x_get_phase2_ca_path">nm_setting_802_1x_get_phase2_ca_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_ca_path
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the path of the "phase 2" CA certificate directory if previously set.
Systems will often have a directory that contains multiple individual CA
certificates which the supplicant can then add to the verification chain.
This may be used in addition to the <link linkend="NMSetting8021x--phase2-ca-cert"><type>"phase2-ca-cert"</type></link> property
to add more CA certificates for verifying the network to client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" CA certificate directory path
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-ca-cert-scheme" role="function">
<title>nm_setting_802_1x_get_ca_cert_scheme ()</title>
<indexterm zone="nm-setting-802-1x-get-ca-cert-scheme"><primary sortas="nm_setting_802_1x_get_ca_cert_scheme">nm_setting_802_1x_get_ca_cert_scheme</primary></indexterm><programlisting><link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  nm_setting_802_1x_get_ca_cert_scheme
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the scheme used to store the CA certificate.  If the returned scheme
is <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, use <link linkend="nm-setting-802-1x-get-ca-cert-blob"><function>nm_setting_802_1x_get_ca_cert_blob()</function></link>;
if <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link>, use <link linkend="nm-setting-802-1x-get-ca-cert-path"><function>nm_setting_802_1x_get_ca_cert_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> scheme used to store the CA certificate (blob or path)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-ca-cert-blob" role="function">
<title>nm_setting_802_1x_get_ca_cert_blob ()</title>
<indexterm zone="nm-setting-802-1x-get-ca-cert-blob"><primary sortas="nm_setting_802_1x_get_ca_cert_blob">nm_setting_802_1x_get_ca_cert_blob</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_ca_cert_blob  (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the CA certificate blob if the CA certificate is stored using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.  Not all EAP methods use a
CA certificate (LEAP for example), and those that can take advantage of the
CA certificate allow it to be unset.  Note that lack of a CA certificate
reduces security by allowing man-in-the-middle attacks, because the identity
of the network cannot be confirmed by the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the CA certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-ca-cert-path" role="function">
<title>nm_setting_802_1x_get_ca_cert_path ()</title>
<indexterm zone="nm-setting-802-1x-get-ca-cert-path"><primary sortas="nm_setting_802_1x_get_ca_cert_path">nm_setting_802_1x_get_ca_cert_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_ca_cert_path  (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the CA certificate path if the CA certificate is stored using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.  Not all EAP methods use a
CA certificate (LEAP for example), and those that can take advantage of the
CA certificate allow it to be unset.  Note that lack of a CA certificate
reduces security by allowing man-in-the-middle attacks, because the identity
of the network cannot be confirmed by the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> path to the CA certificate file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-ca-cert" role="function">
<title>nm_setting_802_1x_set_ca_cert ()</title>
<indexterm zone="nm-setting-802-1x-set-ca-cert"><primary sortas="nm_setting_802_1x_set_ca_cert">nm_setting_802_1x_set_ca_cert</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_ca_cert       (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--ca-cert"><type>"ca-cert"</type></link> property
with the raw certificate data if using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>
scheme, or with the path to the certificate file if using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> when <parameter>scheme</parameter> is set to either <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> or
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, pass the path of the CA certificate file
  (PEM or DER format).  The path must be UTF-8 encoded; use
  <link linkend="g-filename-to-utf8"><function>g_filename_to_utf8()</function></link> to convert if needed.  Passing NULL with any <parameter>scheme</parameter>
  clears the CA certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&#160;:</term>
<listitem><simpara> desired storage scheme for the certificate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_format</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-client-cert-scheme" role="function">
<title>nm_setting_802_1x_get_client_cert_scheme ()</title>
<indexterm zone="nm-setting-802-1x-get-client-cert-scheme"><primary sortas="nm_setting_802_1x_get_client_cert_scheme">nm_setting_802_1x_get_client_cert_scheme</primary></indexterm><programlisting><link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  nm_setting_802_1x_get_client_cert_scheme
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the scheme used to store the client certificate.  If the returned scheme
is <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, use <link linkend="nm-setting-802-1x-get-client-cert-blob"><function>nm_setting_802_1x_get_client_cert_blob()</function></link>;
if <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link>, use <link linkend="nm-setting-802-1x-get-client-cert-path"><function>nm_setting_802_1x_get_client_cert_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> scheme used to store the client certificate (blob or path)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-client-cert-blob" role="function">
<title>nm_setting_802_1x_get_client_cert_blob ()</title>
<indexterm zone="nm-setting-802-1x-get-client-cert-blob"><primary sortas="nm_setting_802_1x_get_client_cert_blob">nm_setting_802_1x_get_client_cert_blob</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_client_cert_blob
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the client certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-client-cert-path" role="function">
<title>nm_setting_802_1x_get_client_cert_path ()</title>
<indexterm zone="nm-setting-802-1x-get-client-cert-path"><primary sortas="nm_setting_802_1x_get_client_cert_path">nm_setting_802_1x_get_client_cert_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_client_cert_path
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> path to the client certificate file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-client-cert" role="function">
<title>nm_setting_802_1x_set_client_cert ()</title>
<indexterm zone="nm-setting-802-1x-set-client-cert"><primary sortas="nm_setting_802_1x_set_client_cert">nm_setting_802_1x_set_client_cert</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_client_cert   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--client-cert"><type>"client-cert"</type></link>
property with the raw certificate data if using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme, or with the path to the certificate
file if using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.
</para>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> when <parameter>scheme</parameter> is set to either <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> or
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, pass the path of the client certificate
  file (PEM, DER, or PKCS<link linkend="12--CAPS"><type>12</type></link> format).  The path must be UTF-8 encoded; use
  <link linkend="g-filename-to-utf8"><function>g_filename_to_utf8()</function></link> to convert if needed.  Passing NULL with any <parameter>scheme</parameter>
  clears the client certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&#160;:</term>
<listitem><simpara> desired storage scheme for the certificate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_format</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase1-peapver" role="function">
<title>nm_setting_802_1x_get_phase1_peapver ()</title>
<indexterm zone="nm-setting-802-1x-get-phase1-peapver"><primary sortas="nm_setting_802_1x_get_phase1_peapver">nm_setting_802_1x_get_phase1_peapver</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase1_peapver
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 1" PEAP version to be used when authenticating with
 EAP-PEAP as contained in the <link linkend="NMSetting8021x--phase1-peapver"><type>"phase1-peapver"</type></link> property.  Valid
 values are NULL (unset), "0" (PEAP version 0), and "1" (PEAP version 1).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase1-peaplabel" role="function">
<title>nm_setting_802_1x_get_phase1_peaplabel ()</title>
<indexterm zone="nm-setting-802-1x-get-phase1-peaplabel"><primary sortas="nm_setting_802_1x_get_phase1_peaplabel">nm_setting_802_1x_get_phase1_peaplabel</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase1_peaplabel
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> whether the "phase 1" PEAP label is new-style or old-style, to be
 used when authenticating with EAP-PEAP, as contained in the
 <link linkend="NMSetting8021x--phase1-peaplabel"><type>"phase1-peaplabel"</type></link> property.  Valid values are NULL (unset),
 "0" (use old-style label), and "1" (use new-style label).  See the
 wpa_supplicant documentation for more details.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase1-fast-provisioning" role="function">
<title>nm_setting_802_1x_get_phase1_fast_provisioning ()</title>
<indexterm zone="nm-setting-802-1x-get-phase1-fast-provisioning"><primary sortas="nm_setting_802_1x_get_phase1_fast_provisioning">nm_setting_802_1x_get_phase1_fast_provisioning</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase1_fast_provisioning
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> whether "phase 1" PEAP fast provisioning should be used, as specified
 by the <link linkend="NMSetting8021x--phase1-fast-provisioning"><type>"phase1-fast-provisioning"</type></link> property.  See the
 wpa_supplicant documentation for more details.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-auth" role="function">
<title>nm_setting_802_1x_get_phase2_auth ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-auth"><primary sortas="nm_setting_802_1x_get_phase2_auth">nm_setting_802_1x_get_phase2_auth</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_auth   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" non-EAP (ex MD5) allowed authentication method as
  specified by the <link linkend="NMSetting8021x--phase2-auth"><type>"phase2-auth"</type></link> property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-autheap" role="function">
<title>nm_setting_802_1x_get_phase2_autheap ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-autheap"><primary sortas="nm_setting_802_1x_get_phase2_autheap">nm_setting_802_1x_get_phase2_autheap</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_autheap
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" EAP-based (ex TLS) allowed authentication method as
  specified by the <link linkend="NMSetting8021x--phase2-autheap"><type>"phase2-autheap"</type></link> property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-ca-cert-scheme" role="function">
<title>nm_setting_802_1x_get_phase2_ca_cert_scheme ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-ca-cert-scheme"><primary sortas="nm_setting_802_1x_get_phase2_ca_cert_scheme">nm_setting_802_1x_get_phase2_ca_cert_scheme</primary></indexterm><programlisting><link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  nm_setting_802_1x_get_phase2_ca_cert_scheme
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the scheme used to store the "phase 2" CA certificate.  If the
returned scheme is <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, use
<link linkend="nm-setting-802-1x-get-ca-cert-blob"><function>nm_setting_802_1x_get_ca_cert_blob()</function></link>; if <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link>,
use <link linkend="nm-setting-802-1x-get-ca-cert-path"><function>nm_setting_802_1x_get_ca_cert_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> scheme used to store the "phase 2" CA certificate (blob or path)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-ca-cert-blob" role="function">
<title>nm_setting_802_1x_get_phase2_ca_cert_blob ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-ca-cert-blob"><primary sortas="nm_setting_802_1x_get_phase2_ca_cert_blob">nm_setting_802_1x_get_phase2_ca_cert_blob</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_phase2_ca_cert_blob
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the "phase 2" CA certificate blob if the CA certificate is stored
using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.  Not all EAP methods use
a CA certificate (LEAP for example), and those that can take advantage of the
CA certificate allow it to be unset.  Note that lack of a CA certificate
reduces security by allowing man-in-the-middle attacks, because the identity
of the network cannot be confirmed by the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" CA certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-ca-cert-path" role="function">
<title>nm_setting_802_1x_get_phase2_ca_cert_path ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-ca-cert-path"><primary sortas="nm_setting_802_1x_get_phase2_ca_cert_path">nm_setting_802_1x_get_phase2_ca_cert_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_ca_cert_path
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the "phase 2" CA certificate path if the CA certificate is stored
using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.  Not all EAP methods use
a CA certificate (LEAP for example), and those that can take advantage of the
CA certificate allow it to be unset.  Note that lack of a CA certificate
reduces security by allowing man-in-the-middle attacks, because the identity
of the network cannot be confirmed by the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> path to the "phase 2" CA certificate file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-phase2-ca-cert" role="function">
<title>nm_setting_802_1x_set_phase2_ca_cert ()</title>
<indexterm zone="nm-setting-802-1x-set-phase2-ca-cert"><primary sortas="nm_setting_802_1x_set_phase2_ca_cert">nm_setting_802_1x_set_phase2_ca_cert</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_phase2_ca_cert
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--phase2-ca-cert"><type>"phase2-ca-cert"</type></link>
property with the raw certificate data if using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme, or with the path to the certificate
file if using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> when <parameter>scheme</parameter> is set to either <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> or
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, pass the path of the "phase2" CA
  certificate file (PEM or DER format).  The path must be UTF-8 encoded; use
  <link linkend="g-filename-to-utf8"><function>g_filename_to_utf8()</function></link> to convert if needed.  Passing NULL with any <parameter>scheme</parameter>
  clears the "phase2" CA certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&#160;:</term>
<listitem><simpara> desired storage scheme for the certificate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_format</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-client-cert-scheme" role="function">
<title>nm_setting_802_1x_get_phase2_client_cert_scheme ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-client-cert-scheme"><primary sortas="nm_setting_802_1x_get_phase2_client_cert_scheme">nm_setting_802_1x_get_phase2_client_cert_scheme</primary></indexterm><programlisting><link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  nm_setting_802_1x_get_phase2_client_cert_scheme
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the scheme used to store the "phase 2" client certificate.  If the
returned scheme is <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, use
<link linkend="nm-setting-802-1x-get-client-cert-blob"><function>nm_setting_802_1x_get_client_cert_blob()</function></link>; if
<link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link>, use
<link linkend="nm-setting-802-1x-get-client-cert-path"><function>nm_setting_802_1x_get_client_cert_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> scheme used to store the "phase 2" client certificate (blob or path)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-client-cert-blob" role="function">
<title>nm_setting_802_1x_get_phase2_client_cert_blob ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-client-cert-blob"><primary sortas="nm_setting_802_1x_get_phase2_client_cert_blob">nm_setting_802_1x_get_phase2_client_cert_blob</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_phase2_client_cert_blob
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" client certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-client-cert-path" role="function">
<title>nm_setting_802_1x_get_phase2_client_cert_path ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-client-cert-path"><primary sortas="nm_setting_802_1x_get_phase2_client_cert_path">nm_setting_802_1x_get_phase2_client_cert_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_client_cert_path
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> path to the "phase 2" client certificate file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-phase2-client-cert" role="function">
<title>nm_setting_802_1x_set_phase2_client_cert ()</title>
<indexterm zone="nm-setting-802-1x-set-phase2-client-cert"><primary sortas="nm_setting_802_1x_set_phase2_client_cert">nm_setting_802_1x_set_phase2_client_cert</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_phase2_client_cert
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--phase2-client-cert"><type>"phase2-client-cert"</type></link>
property with the raw certificate data if using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme, or with the path to the certificate
file if using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.
</para>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> when <parameter>scheme</parameter> is set to either <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> or
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, pass the path of the "phase2" client
  certificate file (PEM, DER, or PKCS<link linkend="12--CAPS"><type>12</type></link> format).  The path must be UTF-8
  encoded; use <link linkend="g-filename-to-utf8"><function>g_filename_to_utf8()</function></link> to convert if needed.  Passing NULL with
  any <parameter>scheme</parameter> clears the "phase2" client certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&#160;:</term>
<listitem><simpara> desired storage scheme for the certificate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_format</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-password" role="function">
<title>nm_setting_802_1x_get_password ()</title>
<indexterm zone="nm-setting-802-1x-get-password"><primary sortas="nm_setting_802_1x_get_password">nm_setting_802_1x_get_password</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_password      (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the password used by the authentication method, if any, as specified
  by the <link linkend="NMSetting8021x--password"><type>"password"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-pin" role="function">
<title>nm_setting_802_1x_get_pin ()</title>
<indexterm zone="nm-setting-802-1x-get-pin"><primary sortas="nm_setting_802_1x_get_pin">nm_setting_802_1x_get_pin</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_pin           (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the PIN used by the authentication method, if any, as specified
  by the <link linkend="NMSetting8021x--pin"><type>"pin"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-psk" role="function">
<title>nm_setting_802_1x_get_psk ()</title>
<indexterm zone="nm-setting-802-1x-get-psk"><primary sortas="nm_setting_802_1x_get_psk">nm_setting_802_1x_get_psk</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_psk           (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the Pre-Shared-Key used by the authentication method, if any, as
  specified by the <link linkend="NMSetting8021x--psk"><type>"psk"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key-scheme" role="function">
<title>nm_setting_802_1x_get_private_key_scheme ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key-scheme"><primary sortas="nm_setting_802_1x_get_private_key_scheme">nm_setting_802_1x_get_private_key_scheme</primary></indexterm><programlisting><link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  nm_setting_802_1x_get_private_key_scheme
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the scheme used to store the private key.  If the returned scheme is
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, use
<link linkend="nm-setting-802-1x-get-client-cert-blob"><function>nm_setting_802_1x_get_client_cert_blob()</function></link>; if
<link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link>, use
<link linkend="nm-setting-802-1x-get-client-cert-path"><function>nm_setting_802_1x_get_client_cert_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> scheme used to store the private key (blob or path)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key-blob" role="function">
<title>nm_setting_802_1x_get_private_key_blob ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key-blob"><primary sortas="nm_setting_802_1x_get_private_key_blob">nm_setting_802_1x_get_private_key_blob</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_private_key_blob
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the private key data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key-path" role="function">
<title>nm_setting_802_1x_get_private_key_path ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key-path"><primary sortas="nm_setting_802_1x_get_private_key_path">nm_setting_802_1x_get_private_key_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_private_key_path
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> path to the private key file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-private-key" role="function">
<title>nm_setting_802_1x_set_private_key ()</title>
<indexterm zone="nm-setting-802-1x-set-private-key"><primary sortas="nm_setting_802_1x_set_private_key">nm_setting_802_1x_set_private_key</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_private_key   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Reads a private key from disk and sets the <link linkend="NMSetting8021x--private-key"><type>"private-key"</type></link>
property with the raw private key data if using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme, or with the path to the private key
file if using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.
</para>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> when <parameter>scheme</parameter> is set to either <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> or
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, pass the path of the private key file
  (PEM, DER, or PKCS<link linkend="12--CAPS"><type>12</type></link> format).  The path must be UTF-8 encoded; use
  <link linkend="g-filename-to-utf8"><function>g_filename_to_utf8()</function></link> to convert if needed.  Passing NULL with any <parameter>scheme</parameter>
  clears the private key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> password used to decrypt the private key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&#160;:</term>
<listitem><simpara> desired storage scheme for the private key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_format</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the private key added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key-password" role="function">
<title>nm_setting_802_1x_get_private_key_password ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key-password"><primary sortas="nm_setting_802_1x_get_private_key_password">nm_setting_802_1x_get_private_key_password</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_private_key_password
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the private key password used to decrypt the private key if
 previously set with <link linkend="nm-setting-802-1x-set-private-key-from-file"><function>nm_setting_802_1x_set_private_key_from_file()</function></link>,
 <link linkend="nm-setting-802-1x-set-private-key-path"><function>nm_setting_802_1x_set_private_key_path()</function></link>, or the
 <link linkend="NMSetting8021x--private-key-password"><type>"private-key-password"</type></link> property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key-format" role="function">
<title>nm_setting_802_1x_get_private_key_format ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key-format"><primary sortas="nm_setting_802_1x_get_private_key_format">nm_setting_802_1x_get_private_key_format</primary></indexterm><programlisting><link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link>  nm_setting_802_1x_get_private_key_format
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the data format of the private key data stored in the
  <link linkend="NMSetting8021x--private-key"><type>"private-key"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key-scheme" role="function">
<title>nm_setting_802_1x_get_phase2_private_key_scheme ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key-scheme"><primary sortas="nm_setting_802_1x_get_phase2_private_key_scheme">nm_setting_802_1x_get_phase2_private_key_scheme</primary></indexterm><programlisting><link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link>  nm_setting_802_1x_get_phase2_private_key_scheme
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Returns the scheme used to store the "phase 2" private key.  If the returned
scheme is <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, use
<link linkend="nm-setting-802-1x-get-client-cert-blob"><function>nm_setting_802_1x_get_client_cert_blob()</function></link>; if
<link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link>, use
<link linkend="nm-setting-802-1x-get-client-cert-path"><function>nm_setting_802_1x_get_client_cert_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> scheme used to store the "phase 2" private key (blob or path)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key-blob" role="function">
<title>nm_setting_802_1x_get_phase2_private_key_blob ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key-blob"><primary sortas="nm_setting_802_1x_get_phase2_private_key_blob">nm_setting_802_1x_get_phase2_private_key_blob</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_phase2_private_key_blob
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" private key data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key-path" role="function">
<title>nm_setting_802_1x_get_phase2_private_key_path ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key-path"><primary sortas="nm_setting_802_1x_get_phase2_private_key_path">nm_setting_802_1x_get_phase2_private_key_path</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_private_key_path
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> path to the "phase 2" private key file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-phase2-private-key" role="function">
<title>nm_setting_802_1x_set_phase2_private_key ()</title>
<indexterm zone="nm-setting-802-1x-set-phase2-private-key"><primary sortas="nm_setting_802_1x_set_phase2_private_key">nm_setting_802_1x_set_phase2_private_key</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_phase2_private_key
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *value,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKScheme">NMSetting8021xCKScheme</link> scheme,
                                                         <link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link> *out_format,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Reads a "phase 2" private key from disk and sets the
<link linkend="NMSetting8021x--phase2-private-key"><type>"phase2-private-key"</type></link> property with the raw private key data if
using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme, or with the path to the
private key file if using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> scheme.
</para>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> when <parameter>scheme</parameter> is set to either <link linkend="NM-SETTING-802-1X-CK-SCHEME-PATH--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_PATH</literal></link> or
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>, pass the path of the "phase2" private 
  key file (PEM, DER, or PKCS<link linkend="12--CAPS"><type>12</type></link> format).  The path must be UTF-8 encoded;
  use <link linkend="g-filename-to-utf8"><function>g_filename_to_utf8()</function></link> to convert if needed.  Passing NULL with any
  <parameter>scheme</parameter> clears the "phase2" private key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> password used to decrypt the private key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&#160;:</term>
<listitem><simpara> desired storage scheme for the private key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_format</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the private key added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key-password" role="function">
<title>nm_setting_802_1x_get_phase2_private_key_password ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key-password"><primary sortas="nm_setting_802_1x_get_phase2_private_key_password">nm_setting_802_1x_get_phase2_private_key_password</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_802_1x_get_phase2_private_key_password
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the private key password used to decrypt the private key if
 previously set with <link linkend="nm-setting-802-1x-set-phase2-private-key-from-file"><function>nm_setting_802_1x_set_phase2_private_key_from_file()</function></link>,
 <link linkend="nm-setting-802-1x-set-phase2-private-key-path"><function>nm_setting_802_1x_set_phase2_private_key_path()</function></link>, or the
 <link linkend="NMSetting8021x--phase2-private-key-password"><type>"phase2-private-key-password"</type></link> property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key-format" role="function">
<title>nm_setting_802_1x_get_phase2_private_key_format ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key-format"><primary sortas="nm_setting_802_1x_get_phase2_private_key_format">nm_setting_802_1x_get_phase2_private_key_format</primary></indexterm><programlisting><link linkend="NMSetting8021xCKFormat">NMSetting8021xCKFormat</link>  nm_setting_802_1x_get_phase2_private_key_format
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the data format of the "phase 2" private key data stored in the
  <link linkend="NMSetting8021x--phase2-private-key"><type>"phase2-private-key"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NMSetting8021xCKType" role="enum">
<title>enum NMSetting8021xCKType</title>
<indexterm zone="NMSetting8021xCKType"><primary sortas="NMSetting8021xCKType">NMSetting8021xCKType</primary></indexterm><programlisting>typedef enum {
	NM_SETTING_802_1X_CK_TYPE_UNKNOWN = 0,
	NM_SETTING_802_1X_CK_TYPE_X509,
	NM_SETTING_802_1X_CK_TYPE_RAW_KEY,
	NM_SETTING_802_1X_CK_TYPE_PKCS12
} NMSetting8021xCKType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-802-1x-get-ca-cert" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_ca_cert ()</title>
<indexterm zone="nm-setting-802-1x-get-ca-cert" role="deprecated"><primary sortas="nm_setting_802_1x_get_ca_cert">nm_setting_802_1x_get_ca_cert</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_ca_cert       (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_ca_cert</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-ca-cert-blob"><function>nm_setting_802_1x_get_ca_cert_blob()</function></link>.</para></warning>
<para>
Returns the CA certificate blob if the CA certificate is stored using the
<link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.  Not all EAP methods use a
CA certificate (LEAP for example), and those that can take advantage of the
CA certificate allow it to be unset.  Note that lack of a CA certificate
reduces security by allowing man-in-the-middle attacks, because the identity
of the network cannot be confirmed by the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the CA certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-ca-cert-from-file" role="function" condition="deprecated">
<title>nm_setting_802_1x_set_ca_cert_from_file ()</title>
<indexterm zone="nm-setting-802-1x-set-ca-cert-from-file" role="deprecated"><primary sortas="nm_setting_802_1x_set_ca_cert_from_file">nm_setting_802_1x_set_ca_cert_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_ca_cert_from_file
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<warning><para><literal>nm_setting_802_1x_set_ca_cert_from_file</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-set-ca-cert"><function>nm_setting_802_1x_set_ca_cert()</function></link> with the
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.</para></warning>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--ca-cert"><type>"ca-cert"</type></link> property
with the raw certificate data using the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link>
scheme.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> the path of the CA certificate file (PEM or DER format). Passing
  NULL clears the CA certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_type</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-client-cert" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_client_cert ()</title>
<indexterm zone="nm-setting-802-1x-get-client-cert" role="deprecated"><primary sortas="nm_setting_802_1x_get_client_cert">nm_setting_802_1x_get_client_cert</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_client_cert   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_client_cert</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-client-cert-blob"><function>nm_setting_802_1x_get_client_cert_blob()</function></link>.</para></warning>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the client certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-client-cert-from-file" role="function" condition="deprecated">
<title>nm_setting_802_1x_set_client_cert_from_file ()</title>
<indexterm zone="nm-setting-802-1x-set-client-cert-from-file" role="deprecated"><primary sortas="nm_setting_802_1x_set_client_cert_from_file">nm_setting_802_1x_set_client_cert_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_client_cert_from_file
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<warning><para><literal>nm_setting_802_1x_set_client_cert_from_file</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-set-client-cert"><function>nm_setting_802_1x_set_client_cert()</function></link> with the
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.</para></warning>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--client-cert"><type>"client-cert"</type></link>
property with the raw certificate data.
</para>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> the path of the client certificate file (PEM, DER, or
  PKCS<link linkend="12--CAPS"><type>12</type></link> format).  Passing NULL clears the client certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_type</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-ca-cert" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_phase2_ca_cert ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-ca-cert" role="deprecated"><primary sortas="nm_setting_802_1x_get_phase2_ca_cert">nm_setting_802_1x_get_phase2_ca_cert</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_phase2_ca_cert
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_phase2_ca_cert</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-phase2-ca-cert-blob"><function>nm_setting_802_1x_get_phase2_ca_cert_blob()</function></link>.</para></warning>
<para>
Returns the "phase 2" CA certificate blob.  Not all EAP methods use
a CA certificate (LEAP for example), and those that can take advantage of the
CA certificate allow it to be unset.  Note that lack of a CA certificate
reduces security by allowing man-in-the-middle attacks, because the identity
of the network cannot be confirmed by the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" CA certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-phase2-ca-cert-from-file" role="function" condition="deprecated">
<title>nm_setting_802_1x_set_phase2_ca_cert_from_file ()</title>
<indexterm zone="nm-setting-802-1x-set-phase2-ca-cert-from-file" role="deprecated"><primary sortas="nm_setting_802_1x_set_phase2_ca_cert_from_file">nm_setting_802_1x_set_phase2_ca_cert_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_phase2_ca_cert_from_file
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<warning><para><literal>nm_setting_802_1x_set_phase2_ca_cert_from_file</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-set-phase2-ca-cert"><function>nm_setting_802_1x_set_phase2_ca_cert()</function></link>.
  with the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.</para></warning>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--phase2-ca-cert"><type>"phase2-ca-cert"</type></link>
property with the raw certificate data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> the path of the "phase2" CA certificate file (PEM or DER format).
  Passing NULL with any <parameter>scheme</parameter> clears the "phase2" CA certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_type</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-client-cert" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_phase2_client_cert ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-client-cert" role="deprecated"><primary sortas="nm_setting_802_1x_get_phase2_client_cert">nm_setting_802_1x_get_phase2_client_cert</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_phase2_client_cert
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_phase2_client_cert</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-phase2-client-cert-blob"><function>nm_setting_802_1x_get_phase2_client_cert_blob()</function></link>.</para></warning>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" client certificate data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-phase2-client-cert-from-file" role="function" condition="deprecated">
<title>nm_setting_802_1x_set_phase2_client_cert_from_file ()</title>
<indexterm zone="nm-setting-802-1x-set-phase2-client-cert-from-file" role="deprecated"><primary sortas="nm_setting_802_1x_set_phase2_client_cert_from_file">nm_setting_802_1x_set_phase2_client_cert_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_phase2_client_cert_from_file
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<warning><para><literal>nm_setting_802_1x_set_phase2_client_cert_from_file</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-set-phase2-client-cert"><function>nm_setting_802_1x_set_phase2_client_cert()</function></link> with the.
  <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.</para></warning>
<para>
Reads a certificate from disk and sets the <link linkend="NMSetting8021x--phase2-client-cert"><type>"phase2-client-cert"</type></link>
property with the raw certificate data.
</para>
<para>
Client certificates are used to identify the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> pass the path of the "phase2" client certificate file (PEM, DER,
  or PKCS<link linkend="12--CAPS"><type>12</type></link> format).  Passing NULL clears the "phase2" client certificate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_type</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the certificate added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_private_key ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key" role="deprecated"><primary sortas="nm_setting_802_1x_get_private_key">nm_setting_802_1x_get_private_key</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_private_key   (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_private_key</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-private-key-blob"><function>nm_setting_802_1x_get_private_key_blob()</function></link>.</para></warning>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the private key data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-private-key-from-file" role="function" condition="deprecated">
<title>nm_setting_802_1x_set_private_key_from_file ()</title>
<indexterm zone="nm-setting-802-1x-set-private-key-from-file" role="deprecated"><primary sortas="nm_setting_802_1x_set_private_key_from_file">nm_setting_802_1x_set_private_key_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_private_key_from_file
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<warning><para><literal>nm_setting_802_1x_set_private_key_from_file</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-set-private-key"><function>nm_setting_802_1x_set_private_key()</function></link> with.
  the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.</para></warning>
<para>
Reads a private key from disk and sets the <link linkend="NMSetting8021x--private-key"><type>"private-key"</type></link>
property with the raw private key data.
</para>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> the path of the private key file (PEM, DER, or PKCS<link linkend="12--CAPS"><type>12</type></link> format).
  Passing NULL clears the private key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> password used to decrypt the private key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_type</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the private key added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-private-key-type" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_private_key_type ()</title>
<indexterm zone="nm-setting-802-1x-get-private-key-type" role="deprecated"><primary sortas="nm_setting_802_1x_get_private_key_type">nm_setting_802_1x_get_private_key_type</primary></indexterm><programlisting><link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link>  nm_setting_802_1x_get_private_key_type
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_private_key_type</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-private-key-format"><function>nm_setting_802_1x_get_private_key_format()</function></link>.</para></warning>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the data format of the private key data stored in the
  <link linkend="NMSetting8021x--private-key"><type>"private-key"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_phase2_private_key ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key" role="deprecated"><primary sortas="nm_setting_802_1x_get_phase2_private_key">nm_setting_802_1x_get_phase2_private_key</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_802_1x_get_phase2_private_key
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_phase2_private_key</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-private-key-blob"><function>nm_setting_802_1x_get_private_key_blob()</function></link>.</para></warning>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the "phase 2" private key data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-set-phase2-private-key-from-file" role="function" condition="deprecated">
<title>nm_setting_802_1x_set_phase2_private_key_from_file ()</title>
<indexterm zone="nm-setting-802-1x-set-phase2-private-key-from-file" role="deprecated"><primary sortas="nm_setting_802_1x_set_phase2_private_key_from_file">nm_setting_802_1x_set_phase2_private_key_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_802_1x_set_phase2_private_key_from_file
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link> *out_ck_type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<warning><para><literal>nm_setting_802_1x_set_phase2_private_key_from_file</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-set-phase2-private-key"><function>nm_setting_802_1x_set_phase2_private_key()</function></link> with
  the <link linkend="NM-SETTING-802-1X-CK-SCHEME-BLOB--CAPS"><literal>NM_SETTING_802_1X_CK_SCHEME_BLOB</literal></link> scheme.</para></warning>
<para>
Reads a "phase 2" private key from disk and sets the
<link linkend="NMSetting8021x--phase2-private-key"><type>"phase2-private-key"</type></link> property with the raw private key data.
</para>
<para>
Private keys are used to authenticate the connecting client to the network
when EAP-TLS is used as either the "phase 1" or "phase 2" 802.1x
authentication method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> the path of the "phase2" private key file (PEM, DER, or PKCS<link linkend="12--CAPS"><type>12</type></link>
  format).  Passing NULL clears the "phase2" private key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> password used to decrypt the private key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_type</parameter>&#160;:</term>
<listitem><simpara> on successful return, the type of the private key added
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> on unsuccessful return, an error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation succeeded, FALSE if it was unsuccessful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-802-1x-get-phase2-private-key-type" role="function" condition="deprecated">
<title>nm_setting_802_1x_get_phase2_private_key_type ()</title>
<indexterm zone="nm-setting-802-1x-get-phase2-private-key-type" role="deprecated"><primary sortas="nm_setting_802_1x_get_phase2_private_key_type">nm_setting_802_1x_get_phase2_private_key_type</primary></indexterm><programlisting><link linkend="NMSetting8021xCKType">NMSetting8021xCKType</link>  nm_setting_802_1x_get_phase2_private_key_type
                                                        (<link linkend="NMSetting8021x">NMSetting8021x</link> *setting);</programlisting>
<warning><para><literal>nm_setting_802_1x_get_phase2_private_key_type</literal> has been deprecated since version 0.8 and should not be used in newly-written code. This function has been deprecated and should
  not be used in newly written code. Calling this function is
  equivalent to calling <link linkend="nm-setting-802-1x-get-phase2-private-key-format"><function>nm_setting_802_1x_get_phase2_private_key_format()</function></link>.</para></warning>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="NMSetting8021x"><type>NMSetting8021x</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the data format of the private key data stored in the
  <link linkend="NMSetting8021x--phase2-private-key"><type>"phase2-private-key"</type></link> property
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="NMSetting8021x.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="NMSetting8021x--anonymous-identity" role="property"><title>The <literal>&quot;anonymous-identity&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--anonymous-identity"><primary sortas="NMSetting8021x:anonymous-identity">NMSetting8021x:anonymous-identity</primary></indexterm><programlisting>  &quot;anonymous-identity&quot;       <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Anonymous identity string for EAP authentication methods.  Used as the
unencrypted identity with EAP types that support different tunneled
identity like EAP-TTLS.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--ca-cert" role="property"><title>The <literal>&quot;ca-cert&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--ca-cert"><primary sortas="NMSetting8021x:ca-cert">NMSetting8021x:ca-cert</primary></indexterm><programlisting>  &quot;ca-cert&quot;                  <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Contains the CA certificate if used by the EAP method specified in the
<link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property.  Setting this property directly is
discouraged; use the <link linkend="nm-setting-802-1x-set-ca-cert"><function>nm_setting_802_1x_set_ca_cert()</function></link> function instead.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--ca-path" role="property"><title>The <literal>&quot;ca-path&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--ca-path"><primary sortas="NMSetting8021x:ca-path">NMSetting8021x:ca-path</primary></indexterm><programlisting>  &quot;ca-path&quot;                  <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
UTF-8 encoded path to a directory containing PEM or DER formatted
certificates to be added to the verification chain in addition to the
certificate specified in the <link linkend="NMSetting8021x--ca-cert"><type>"ca-cert"</type></link> property.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--client-cert" role="property"><title>The <literal>&quot;client-cert&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--client-cert"><primary sortas="NMSetting8021x:client-cert">NMSetting8021x:client-cert</primary></indexterm><programlisting>  &quot;client-cert&quot;              <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Contains the client certificate if used by the EAP method specified in
the <link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property.  Setting this property directly is
discouraged; use the <link linkend="nm-setting-802-1x-set-client-cert"><function>nm_setting_802_1x_set_client_cert()</function></link> function instead.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--eap" role="property"><title>The <literal>&quot;eap&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--eap"><primary sortas="NMSetting8021x:eap">NMSetting8021x:eap</primary></indexterm><programlisting>  &quot;eap&quot;                      <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write</programlisting>
<para>
The allowed EAP method to be used when authenticating to the network with
802.1x.  Valid methods are: "leap", "md5", "tls", "peap", "ttls", and
"fast".  Each method requires different configuration using the
properties of this object; refer to wpa_supplicant documentation for the
allowed combinations.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--identity" role="property"><title>The <literal>&quot;identity&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--identity"><primary sortas="NMSetting8021x:identity">NMSetting8021x:identity</primary></indexterm><programlisting>  &quot;identity&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Identity string for EAP authentication methods.  Often the user's
user or login name.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--password" role="property"><title>The <literal>&quot;password&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--password"><primary sortas="NMSetting8021x:password">NMSetting8021x:password</primary></indexterm><programlisting>  &quot;password&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Password used for EAP authentication methods.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase1-fast-provisioning" role="property"><title>The <literal>&quot;phase1-fast-provisioning&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase1-fast-provisioning"><primary sortas="NMSetting8021x:phase1-fast-provisioning">NMSetting8021x:phase1-fast-provisioning</primary></indexterm><programlisting>  &quot;phase1-fast-provisioning&quot; <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Enables or disables in-line provisioning of EAP-FAST credentials when
FAST is specified as the EAP method in the <link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property.
Recognized values are "0" (disabled), "1" (allow unauthenticated
provisioning), "2" (allow authenticated provisioning), and "3" (allow
both authenticated and unauthenticated provisioning).  See the
wpa_supplicant documentation for more details.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase1-peaplabel" role="property"><title>The <literal>&quot;phase1-peaplabel&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase1-peaplabel"><primary sortas="NMSetting8021x:phase1-peaplabel">NMSetting8021x:phase1-peaplabel</primary></indexterm><programlisting>  &quot;phase1-peaplabel&quot;         <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Forces use of the new PEAP label during key derivation.  Some RADIUS
servers may require forcing the new PEAP label to interoperate with
PEAPv1.  Set to "1" to force use of the new PEAP label.  See the
wpa_supplicant documentation for more details.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase1-peapver" role="property"><title>The <literal>&quot;phase1-peapver&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase1-peapver"><primary sortas="NMSetting8021x:phase1-peapver">NMSetting8021x:phase1-peapver</primary></indexterm><programlisting>  &quot;phase1-peapver&quot;           <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Forces which PEAP version is used when PEAP is set as the EAP method in
the <link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property.  When unset, the version reported by
the server will be used.  Sometimes when using older RADIUS servers, it
is necessary to force the client to use a particular PEAP version.  To do
so, this property may be set to "0" or "1" to force that specific PEAP
version.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase2-auth" role="property"><title>The <literal>&quot;phase2-auth&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-auth"><primary sortas="NMSetting8021x:phase2-auth">NMSetting8021x:phase2-auth</primary></indexterm><programlisting>  &quot;phase2-auth&quot;              <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Specifies the allowed "phase 2" inner non-EAP authentication methods when
an EAP method that uses an inner TLS tunnel is specified in the
<link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property.  Recognized non-EAP phase2 methods are
"pap", "chap", "mschap", "mschapv2", "gtc", "otp", "md5", and "tls".
Each 'phase 2' inner method requires specific parameters for successful
authentication; see the wpa_supplicant documentation for more details.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase2-autheap" role="property"><title>The <literal>&quot;phase2-autheap&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-autheap"><primary sortas="NMSetting8021x:phase2-autheap">NMSetting8021x:phase2-autheap</primary></indexterm><programlisting>  &quot;phase2-autheap&quot;           <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Specifies the allowed "phase 2" inner EAP-based authentication methods
when an EAP method that uses an inner TLS tunnel is specified in the
<link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property.  Recognized EAP-based phase2 methods are
"md5", "mschapv2", "otp", "gtc", and "tls". Each 'phase 2' inner method
requires specific parameters for successful authentication; see the
wpa_supplicant documentation for more details.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase2-ca-cert" role="property"><title>The <literal>&quot;phase2-ca-cert&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-ca-cert"><primary sortas="NMSetting8021x:phase2-ca-cert">NMSetting8021x:phase2-ca-cert</primary></indexterm><programlisting>  &quot;phase2-ca-cert&quot;           <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Contains the CA certificate if used by the EAP method specified in the
<link linkend="NMSetting8021x--phase2-auth"><type>"phase2-auth"</type></link> or <link linkend="NMSetting8021x--phase2-autheap"><type>"phase2-autheap"</type></link> properties.
Setting this property directly is discouraged; use the
<link linkend="nm-setting-802-1x-set-phase2-ca-cert"><function>nm_setting_802_1x_set_phase2_ca_cert()</function></link> function instead.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--phase2-ca-path" role="property"><title>The <literal>&quot;phase2-ca-path&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-ca-path"><primary sortas="NMSetting8021x:phase2-ca-path">NMSetting8021x:phase2-ca-path</primary></indexterm><programlisting>  &quot;phase2-ca-path&quot;           <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
UTF-8 encoded path to a directory containing PEM or DER formatted
certificates to be added to the verification chain in addition to the
certificate specified in the <link linkend="NMSetting8021x--phase2-ca-cert"><type>"phase2-ca-cert"</type></link> property.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--phase2-client-cert" role="property"><title>The <literal>&quot;phase2-client-cert&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-client-cert"><primary sortas="NMSetting8021x:phase2-client-cert">NMSetting8021x:phase2-client-cert</primary></indexterm><programlisting>  &quot;phase2-client-cert&quot;       <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Contains the client certificate if used by the EAP method specified in
the <link linkend="NMSetting8021x--phase2-auth"><type>"phase2-auth"</type></link> or <link linkend="NMSetting8021x--phase2-autheap"><type>"phase2-autheap"</type></link>
properties.  Setting this property directly is discouraged; use the
<link linkend="nm-setting-802-1x-set-phase2-client-cert"><function>nm_setting_802_1x_set_phase2_client_cert()</function></link> function instead.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--phase2-private-key" role="property"><title>The <literal>&quot;phase2-private-key&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-private-key"><primary sortas="NMSetting8021x:phase2-private-key">NMSetting8021x:phase2-private-key</primary></indexterm><programlisting>  &quot;phase2-private-key&quot;       <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Private key data used by "phase 2" inner authentication methods.
</para>
<para>
Contains the "phase 2" inner private key if the <link linkend="NMSetting8021x--auth"><type>"auth"</type></link> or
<link linkend="NMSetting8021x--phase2-autheap"><type>"phase2-autheap"</type></link> property is set to 'tls'.  Setting this
property directly is discouraged; use the
<link linkend="nm-setting-802-1x-set-phase2-private-key"><function>nm_setting_802_1x_set_phase2_private_key()</function></link> function instead.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--phase2-private-key-password" role="property"><title>The <literal>&quot;phase2-private-key-password&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--phase2-private-key-password"><primary sortas="NMSetting8021x:phase2-private-key-password">NMSetting8021x:phase2-private-key-password</primary></indexterm><programlisting>  &quot;phase2-private-key-password&quot; <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
The password used to decrypt the private key specified in
<link linkend="NMSetting8021x--phase2-private-key"><type>"phase2-private-key"</type></link> when the private key either uses the
path scheme, or if the private key is a PKCS<link linkend="12--CAPS"><type>12</type></link> format key.  Setting this
property directly is not generally necessary except when returning
secrets to NetworkManager; it is generally set automatically when setting
the private key by the <link linkend="nm-setting-802-1x-set-phase2-private-key"><function>nm_setting_802_1x_set_phase2_private_key()</function></link> function.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--private-key" role="property"><title>The <literal>&quot;private-key&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--private-key"><primary sortas="NMSetting8021x:private-key">NMSetting8021x:private-key</primary></indexterm><programlisting>  &quot;private-key&quot;              <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Contains the private key if the <link linkend="NMSetting8021x--eap"><type>"eap"</type></link> property is set to
'tls'.  Setting this property directly is discouraged; use the
<link linkend="nm-setting-802-1x-set-private-key"><function>nm_setting_802_1x_set_private_key()</function></link> function instead.</para>
<para>
</para></refsect2>
<refsect2 id="NMSetting8021x--private-key-password" role="property"><title>The <literal>&quot;private-key-password&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--private-key-password"><primary sortas="NMSetting8021x:private-key-password">NMSetting8021x:private-key-password</primary></indexterm><programlisting>  &quot;private-key-password&quot;     <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
The password used to decrypt the private key specified in
<link linkend="NMSetting8021x--private-key"><type>"private-key"</type></link> when the private key either uses the path
scheme, or if the private key is a PKCS<link linkend="12--CAPS"><type>12</type></link> format key.  Setting this
property directly is not generally necessary except when returning
secrets to NetworkManager; it is generally set automatically when setting
the private key by the <link linkend="nm-setting-802-1x-set-private-key"><function>nm_setting_802_1x_set_private_key()</function></link> function.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSetting8021x--system-ca-certs" role="property"><title>The <literal>&quot;system-ca-certs&quot;</literal> property</title>
<indexterm zone="NMSetting8021x--system-ca-certs"><primary sortas="NMSetting8021x:system-ca-certs">NMSetting8021x:system-ca-certs</primary></indexterm><programlisting>  &quot;system-ca-certs&quot;          <link linkend="gboolean">gboolean</link>              : Read / Write / Construct</programlisting>
<para>
When TRUE, overrides <link linkend="NMSetting8021x--ca-path"><type>"ca-path"</type></link> and
<link linkend="NMSetting8021x--phase2-ca-path"><type>"phase2-ca-path"</type></link> properties using the system CA directory
specified at configure time with the --system-ca-path switch.  The
certificates in this directory are added to the verification chain in
addition to any certificates specified by the <link linkend="NMSetting8021x--ca-cert"><type>"ca-cert"</type></link>,
<link linkend="NMSetting8021x--ca-cert-path"><type>"ca-cert-path"</type></link>, <link linkend="NMSetting8021x--phase2-ca-cert"><type>"phase2-ca-cert"</type></link> and
<link linkend="NMSetting8021x--phase2-ca-cert-path"><type>"phase2-ca-cert-path"</type></link> properties.</para>
<para>
</para><para>Default value: FALSE</para>
</refsect2>
</refsect1>




</refentry>
