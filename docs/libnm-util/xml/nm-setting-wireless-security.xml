<refentry id="NMSettingWirelessSecurity">
<refmeta>
<refentrytitle role="top_of_page" id="NMSettingWirelessSecurity.top_of_page">NMSettingWirelessSecurity</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNM-UTIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>NMSettingWirelessSecurity</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="NMSettingWirelessSecurity.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-SETTING-NAME--CAPS">NM_SETTING_WIRELESS_SECURITY_SETTING_NAME</link>
enum                <link linkend="NMSettingWirelessSecurityError">NMSettingWirelessSecurityError</link>;
#define             <link linkend="NM-TYPE-SETTING-WIRELESS-SECURITY-ERROR--CAPS">NM_TYPE_SETTING_WIRELESS_SECURITY_ERROR</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-ERROR--CAPS">NM_SETTING_WIRELESS_SECURITY_ERROR</link>
<link linkend="GQuark">GQuark</link>              <link linkend="nm-setting-wireless-security-error-quark">nm_setting_wireless_security_error_quark</link>
                                                        (void);
enum                <link linkend="NMWepKeyType">NMWepKeyType</link>;
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-KEY-MGMT--CAPS">NM_SETTING_WIRELESS_SECURITY_KEY_MGMT</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-WEP-TX-KEYIDX--CAPS">NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-AUTH-ALG--CAPS">NM_SETTING_WIRELESS_SECURITY_AUTH_ALG</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-PROTO--CAPS">NM_SETTING_WIRELESS_SECURITY_PROTO</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-PAIRWISE--CAPS">NM_SETTING_WIRELESS_SECURITY_PAIRWISE</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-GROUP--CAPS">NM_SETTING_WIRELESS_SECURITY_GROUP</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-LEAP-USERNAME--CAPS">NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-WEP-KEY0--CAPS">NM_SETTING_WIRELESS_SECURITY_WEP_KEY0</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-WEP-KEY1--CAPS">NM_SETTING_WIRELESS_SECURITY_WEP_KEY1</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-WEP-KEY2--CAPS">NM_SETTING_WIRELESS_SECURITY_WEP_KEY2</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-WEP-KEY3--CAPS">NM_SETTING_WIRELESS_SECURITY_WEP_KEY3</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-PSK--CAPS">NM_SETTING_WIRELESS_SECURITY_PSK</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-LEAP-PASSWORD--CAPS">NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD</link>
#define             <link linkend="NM-SETTING-WIRELESS-SECURITY-WEP-KEY-TYPE--CAPS">NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE</link>
                    <link linkend="NMSettingWirelessSecurity-struct">NMSettingWirelessSecurity</link>;
<link linkend="GType">GType</link>               <link linkend="nm-setting-wireless-security-get-type">nm_setting_wireless_security_get_type</link>
                                                        (void);
<link linkend="NMSetting">NMSetting</link> *         <link linkend="nm-setting-wireless-security-new">nm_setting_wireless_security_new</link>    (void);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-key-mgmt">nm_setting_wireless_security_get_key_mgmt</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
<link linkend="guint32">guint32</link>             <link linkend="nm-setting-wireless-security-get-num-protos">nm_setting_wireless_security_get_num_protos</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-proto">nm_setting_wireless_security_get_proto</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-wireless-security-add-proto">nm_setting_wireless_security_add_proto</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         const <link linkend="char">char</link> *proto);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-remove-proto">nm_setting_wireless_security_remove_proto</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-clear-protos">nm_setting_wireless_security_clear_protos</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
<link linkend="guint32">guint32</link>             <link linkend="nm-setting-wireless-security-get-num-pairwise">nm_setting_wireless_security_get_num_pairwise</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-pairwise">nm_setting_wireless_security_get_pairwise</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-wireless-security-add-pairwise">nm_setting_wireless_security_add_pairwise</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         const <link linkend="char">char</link> *pairwise);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-remove-pairwise">nm_setting_wireless_security_remove_pairwise</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-clear-pairwise">nm_setting_wireless_security_clear_pairwise</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
<link linkend="guint32">guint32</link>             <link linkend="nm-setting-wireless-security-get-num-groups">nm_setting_wireless_security_get_num_groups</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-group">nm_setting_wireless_security_get_group</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-setting-wireless-security-add-group">nm_setting_wireless_security_add_group</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         const <link linkend="char">char</link> *group);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-remove-group">nm_setting_wireless_security_remove_group</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-clear-groups">nm_setting_wireless_security_clear_groups</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-psk">nm_setting_wireless_security_get_psk</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-leap-username">nm_setting_wireless_security_get_leap_username</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-leap-password">nm_setting_wireless_security_get_leap_password</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-wep-key">nm_setting_wireless_security_get_wep_key</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> idx);
<link linkend="void">void</link>                <link linkend="nm-setting-wireless-security-set-wep-key">nm_setting_wireless_security_set_wep_key</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> idx,
                                                         const <link linkend="char">char</link> *key);
<link linkend="guint32">guint32</link>             <link linkend="nm-setting-wireless-security-get-wep-tx-keyidx">nm_setting_wireless_security_get_wep_tx_keyidx</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
const <link linkend="char">char</link> *        <link linkend="nm-setting-wireless-security-get-auth-alg">nm_setting_wireless_security_get_auth_alg</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
<link linkend="NMWepKeyType">NMWepKeyType</link>        <link linkend="nm-setting-wireless-security-get-wep-key-type">nm_setting_wireless_security_get_wep_key_type</link>
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);
</synopsis>
</refsynopsisdiv>

<refsect1 id="NMSettingWirelessSecurity.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="NMSetting">NMSetting</link>
         +----NMSettingWirelessSecurity
</synopsis>
</refsect1>





<refsect1 id="NMSettingWirelessSecurity.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="NMSettingWirelessSecurity--auth-alg">auth-alg</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--group">group</link>&quot;                    <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--key-mgmt">key-mgmt</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--leap-password">leap-password</link>&quot;            <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--leap-username">leap-username</link>&quot;            <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--pairwise">pairwise</link>&quot;                 <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--proto">proto</link>&quot;                    <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--psk">psk</link>&quot;                      <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--wep-key-type">wep-key-type</link>&quot;             <link linkend="guint">guint</link>                 : Read / Write / Construct
  &quot;<link linkend="NMSettingWirelessSecurity--wep-key0">wep-key0</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--wep-key1">wep-key1</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--wep-key2">wep-key2</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--wep-key3">wep-key3</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="NMSettingWirelessSecurity--wep-tx-keyidx">wep-tx-keyidx</link>&quot;            <link linkend="guint">guint</link>                 : Read / Write / Construct
</synopsis>
</refsect1>



<refsect1 id="NMSettingWirelessSecurity.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="NMSettingWirelessSecurity.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-SETTING-NAME--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_SETTING_NAME</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-SETTING-NAME--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_SETTING_NAME">NM_SETTING_WIRELESS_SECURITY_SETTING_NAME</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_SETTING_NAME "802-11-wireless-security"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSettingWirelessSecurityError" role="enum">
<title>enum NMSettingWirelessSecurityError</title>
<indexterm zone="NMSettingWirelessSecurityError"><primary sortas="NMSettingWirelessSecurityError">NMSettingWirelessSecurityError</primary></indexterm><programlisting>typedef enum
{
	NM_SETTING_WIRELESS_SECURITY_ERROR_UNKNOWN = 0,
	NM_SETTING_WIRELESS_SECURITY_ERROR_INVALID_PROPERTY,
	NM_SETTING_WIRELESS_SECURITY_ERROR_MISSING_PROPERTY,
	NM_SETTING_WIRELESS_SECURITY_ERROR_MISSING_802_1X_SETTING,
	NM_SETTING_WIRELESS_SECURITY_ERROR_LEAP_REQUIRES_802_1X,
	NM_SETTING_WIRELESS_SECURITY_ERROR_LEAP_REQUIRES_USERNAME,
	NM_SETTING_WIRELESS_SECURITY_ERROR_SHARED_KEY_REQUIRES_WEP
} NMSettingWirelessSecurityError;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-TYPE-SETTING-WIRELESS-SECURITY-ERROR--CAPS" role="macro">
<title>NM_TYPE_SETTING_WIRELESS_SECURITY_ERROR</title>
<indexterm zone="NM-TYPE-SETTING-WIRELESS-SECURITY-ERROR--CAPS"><primary sortas="NM_TYPE_SETTING_WIRELESS_SECURITY_ERROR">NM_TYPE_SETTING_WIRELESS_SECURITY_ERROR</primary></indexterm><programlisting>#define NM_TYPE_SETTING_WIRELESS_SECURITY_ERROR (nm_setting_wireless_security_error_get_type ()) 
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-ERROR--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_ERROR</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-ERROR--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_ERROR">NM_SETTING_WIRELESS_SECURITY_ERROR</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_ERROR nm_setting_wireless_security_error_quark ()
</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-wireless-security-error-quark" role="function">
<title>nm_setting_wireless_security_error_quark ()</title>
<indexterm zone="nm-setting-wireless-security-error-quark"><primary sortas="nm_setting_wireless_security_error_quark">nm_setting_wireless_security_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              nm_setting_wireless_security_error_quark
                                                        (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NMWepKeyType" role="enum">
<title>enum NMWepKeyType</title>
<indexterm zone="NMWepKeyType"><primary sortas="NMWepKeyType">NMWepKeyType</primary></indexterm><programlisting>typedef enum {
	NM_WEP_KEY_TYPE_UNKNOWN = 0,
	NM_WEP_KEY_TYPE_KEY = 1,          /* Hex or ASCII */
	NM_WEP_KEY_TYPE_PASSPHRASE = 2,   /* 104/128-bit Passphrase */

	NM_WEP_KEY_TYPE_LAST = NM_WEP_KEY_TYPE_PASSPHRASE
} NMWepKeyType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-KEY-MGMT--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_KEY_MGMT</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-KEY-MGMT--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_KEY_MGMT">NM_SETTING_WIRELESS_SECURITY_KEY_MGMT</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_KEY_MGMT "key-mgmt"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-WEP-TX-KEYIDX--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-WEP-TX-KEYIDX--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX">NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX "wep-tx-keyidx"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-AUTH-ALG--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_AUTH_ALG</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-AUTH-ALG--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_AUTH_ALG">NM_SETTING_WIRELESS_SECURITY_AUTH_ALG</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_AUTH_ALG "auth-alg"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-PROTO--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_PROTO</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-PROTO--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_PROTO">NM_SETTING_WIRELESS_SECURITY_PROTO</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_PROTO "proto"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-PAIRWISE--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_PAIRWISE</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-PAIRWISE--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_PAIRWISE">NM_SETTING_WIRELESS_SECURITY_PAIRWISE</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_PAIRWISE "pairwise"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-GROUP--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_GROUP</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-GROUP--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_GROUP">NM_SETTING_WIRELESS_SECURITY_GROUP</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_GROUP "group"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-LEAP-USERNAME--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-LEAP-USERNAME--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME">NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME "leap-username"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-WEP-KEY0--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_WEP_KEY0</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-WEP-KEY0--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_WEP_KEY0">NM_SETTING_WIRELESS_SECURITY_WEP_KEY0</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_WEP_KEY0 "wep-key0"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-WEP-KEY1--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_WEP_KEY1</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-WEP-KEY1--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_WEP_KEY1">NM_SETTING_WIRELESS_SECURITY_WEP_KEY1</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_WEP_KEY1 "wep-key1"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-WEP-KEY2--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_WEP_KEY2</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-WEP-KEY2--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_WEP_KEY2">NM_SETTING_WIRELESS_SECURITY_WEP_KEY2</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_WEP_KEY2 "wep-key2"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-WEP-KEY3--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_WEP_KEY3</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-WEP-KEY3--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_WEP_KEY3">NM_SETTING_WIRELESS_SECURITY_WEP_KEY3</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_WEP_KEY3 "wep-key3"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-PSK--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_PSK</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-PSK--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_PSK">NM_SETTING_WIRELESS_SECURITY_PSK</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_PSK "psk"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-LEAP-PASSWORD--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-LEAP-PASSWORD--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD">NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD "leap-password"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-WIRELESS-SECURITY-WEP-KEY-TYPE--CAPS" role="macro">
<title>NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE</title>
<indexterm zone="NM-SETTING-WIRELESS-SECURITY-WEP-KEY-TYPE--CAPS"><primary sortas="NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE">NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE</primary></indexterm><programlisting>#define NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE "wep-key-type"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSettingWirelessSecurity-struct" role="struct">
<title>NMSettingWirelessSecurity</title>
<indexterm zone="NMSettingWirelessSecurity-struct"><primary sortas="NMSettingWirelessSecurity">NMSettingWirelessSecurity</primary></indexterm><programlisting>typedef struct _NMSettingWirelessSecurity NMSettingWirelessSecurity;</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-wireless-security-get-type" role="function">
<title>nm_setting_wireless_security_get_type ()</title>
<indexterm zone="nm-setting-wireless-security-get-type"><primary sortas="nm_setting_wireless_security_get_type">nm_setting_wireless_security_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               nm_setting_wireless_security_get_type
                                                        (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-new" role="function">
<title>nm_setting_wireless_security_new ()</title>
<indexterm zone="nm-setting-wireless-security-new"><primary sortas="nm_setting_wireless_security_new">nm_setting_wireless_security_new</primary></indexterm><programlisting><link linkend="NMSetting">NMSetting</link> *         nm_setting_wireless_security_new    (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-key-mgmt" role="function">
<title>nm_setting_wireless_security_get_key_mgmt ()</title>
<indexterm zone="nm-setting-wireless-security-get-key-mgmt"><primary sortas="nm_setting_wireless_security_get_key_mgmt">nm_setting_wireless_security_get_key_mgmt</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_key_mgmt
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-num-protos" role="function">
<title>nm_setting_wireless_security_get_num_protos ()</title>
<indexterm zone="nm-setting-wireless-security-get-num-protos"><primary sortas="nm_setting_wireless_security_get_num_protos">nm_setting_wireless_security_get_num_protos</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             nm_setting_wireless_security_get_num_protos
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-proto" role="function">
<title>nm_setting_wireless_security_get_proto ()</title>
<indexterm zone="nm-setting-wireless-security-get-proto"><primary sortas="nm_setting_wireless_security_get_proto">nm_setting_wireless_security_get_proto</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_proto
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-add-proto" role="function">
<title>nm_setting_wireless_security_add_proto ()</title>
<indexterm zone="nm-setting-wireless-security-add-proto"><primary sortas="nm_setting_wireless_security_add_proto">nm_setting_wireless_security_add_proto</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_wireless_security_add_proto
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         const <link linkend="char">char</link> *proto);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proto</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-remove-proto" role="function">
<title>nm_setting_wireless_security_remove_proto ()</title>
<indexterm zone="nm-setting-wireless-security-remove-proto"><primary sortas="nm_setting_wireless_security_remove_proto">nm_setting_wireless_security_remove_proto</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_remove_proto
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-clear-protos" role="function">
<title>nm_setting_wireless_security_clear_protos ()</title>
<indexterm zone="nm-setting-wireless-security-clear-protos"><primary sortas="nm_setting_wireless_security_clear_protos">nm_setting_wireless_security_clear_protos</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_clear_protos
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-num-pairwise" role="function">
<title>nm_setting_wireless_security_get_num_pairwise ()</title>
<indexterm zone="nm-setting-wireless-security-get-num-pairwise"><primary sortas="nm_setting_wireless_security_get_num_pairwise">nm_setting_wireless_security_get_num_pairwise</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             nm_setting_wireless_security_get_num_pairwise
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-pairwise" role="function">
<title>nm_setting_wireless_security_get_pairwise ()</title>
<indexterm zone="nm-setting-wireless-security-get-pairwise"><primary sortas="nm_setting_wireless_security_get_pairwise">nm_setting_wireless_security_get_pairwise</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_pairwise
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-add-pairwise" role="function">
<title>nm_setting_wireless_security_add_pairwise ()</title>
<indexterm zone="nm-setting-wireless-security-add-pairwise"><primary sortas="nm_setting_wireless_security_add_pairwise">nm_setting_wireless_security_add_pairwise</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_wireless_security_add_pairwise
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         const <link linkend="char">char</link> *pairwise);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pairwise</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-remove-pairwise" role="function">
<title>nm_setting_wireless_security_remove_pairwise ()</title>
<indexterm zone="nm-setting-wireless-security-remove-pairwise"><primary sortas="nm_setting_wireless_security_remove_pairwise">nm_setting_wireless_security_remove_pairwise</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_remove_pairwise
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-clear-pairwise" role="function">
<title>nm_setting_wireless_security_clear_pairwise ()</title>
<indexterm zone="nm-setting-wireless-security-clear-pairwise"><primary sortas="nm_setting_wireless_security_clear_pairwise">nm_setting_wireless_security_clear_pairwise</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_clear_pairwise
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-num-groups" role="function">
<title>nm_setting_wireless_security_get_num_groups ()</title>
<indexterm zone="nm-setting-wireless-security-get-num-groups"><primary sortas="nm_setting_wireless_security_get_num_groups">nm_setting_wireless_security_get_num_groups</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             nm_setting_wireless_security_get_num_groups
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-group" role="function">
<title>nm_setting_wireless_security_get_group ()</title>
<indexterm zone="nm-setting-wireless-security-get-group"><primary sortas="nm_setting_wireless_security_get_group">nm_setting_wireless_security_get_group</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_group
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-add-group" role="function">
<title>nm_setting_wireless_security_add_group ()</title>
<indexterm zone="nm-setting-wireless-security-add-group"><primary sortas="nm_setting_wireless_security_add_group">nm_setting_wireless_security_add_group</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_setting_wireless_security_add_group
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         const <link linkend="char">char</link> *group);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-remove-group" role="function">
<title>nm_setting_wireless_security_remove_group ()</title>
<indexterm zone="nm-setting-wireless-security-remove-group"><primary sortas="nm_setting_wireless_security_remove_group">nm_setting_wireless_security_remove_group</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_remove_group
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> i);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-clear-groups" role="function">
<title>nm_setting_wireless_security_clear_groups ()</title>
<indexterm zone="nm-setting-wireless-security-clear-groups"><primary sortas="nm_setting_wireless_security_clear_groups">nm_setting_wireless_security_clear_groups</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_clear_groups
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-psk" role="function">
<title>nm_setting_wireless_security_get_psk ()</title>
<indexterm zone="nm-setting-wireless-security-get-psk"><primary sortas="nm_setting_wireless_security_get_psk">nm_setting_wireless_security_get_psk</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_psk
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-leap-username" role="function">
<title>nm_setting_wireless_security_get_leap_username ()</title>
<indexterm zone="nm-setting-wireless-security-get-leap-username"><primary sortas="nm_setting_wireless_security_get_leap_username">nm_setting_wireless_security_get_leap_username</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_leap_username
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-leap-password" role="function">
<title>nm_setting_wireless_security_get_leap_password ()</title>
<indexterm zone="nm-setting-wireless-security-get-leap-password"><primary sortas="nm_setting_wireless_security_get_leap_password">nm_setting_wireless_security_get_leap_password</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_leap_password
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-wep-key" role="function">
<title>nm_setting_wireless_security_get_wep_key ()</title>
<indexterm zone="nm-setting-wireless-security-get-wep-key"><primary sortas="nm_setting_wireless_security_get_wep_key">nm_setting_wireless_security_get_wep_key</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_wep_key
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> idx);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>idx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-set-wep-key" role="function">
<title>nm_setting_wireless_security_set_wep_key ()</title>
<indexterm zone="nm-setting-wireless-security-set-wep-key"><primary sortas="nm_setting_wireless_security_set_wep_key">nm_setting_wireless_security_set_wep_key</primary></indexterm><programlisting><link linkend="void">void</link>                nm_setting_wireless_security_set_wep_key
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting,
                                                         <link linkend="guint32">guint32</link> idx,
                                                         const <link linkend="char">char</link> *key);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>idx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-wep-tx-keyidx" role="function">
<title>nm_setting_wireless_security_get_wep_tx_keyidx ()</title>
<indexterm zone="nm-setting-wireless-security-get-wep-tx-keyidx"><primary sortas="nm_setting_wireless_security_get_wep_tx_keyidx">nm_setting_wireless_security_get_wep_tx_keyidx</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             nm_setting_wireless_security_get_wep_tx_keyidx
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-auth-alg" role="function">
<title>nm_setting_wireless_security_get_auth_alg ()</title>
<indexterm zone="nm-setting-wireless-security-get-auth-alg"><primary sortas="nm_setting_wireless_security_get_auth_alg">nm_setting_wireless_security_get_auth_alg</primary></indexterm><programlisting>const <link linkend="char">char</link> *        nm_setting_wireless_security_get_auth_alg
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-wireless-security-get-wep-key-type" role="function">
<title>nm_setting_wireless_security_get_wep_key_type ()</title>
<indexterm zone="nm-setting-wireless-security-get-wep-key-type"><primary sortas="nm_setting_wireless_security_get_wep_key_type">nm_setting_wireless_security_get_wep_key_type</primary></indexterm><programlisting><link linkend="NMWepKeyType">NMWepKeyType</link>        nm_setting_wireless_security_get_wep_key_type
                                                        (<link linkend="NMSettingWirelessSecurity">NMSettingWirelessSecurity</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="NMSettingWirelessSecurity.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="NMSettingWirelessSecurity--auth-alg" role="property"><title>The <literal>&quot;auth-alg&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--auth-alg"><primary sortas="NMSettingWirelessSecurity:auth-alg">NMSettingWirelessSecurity:auth-alg</primary></indexterm><programlisting>  &quot;auth-alg&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
When WEP is used (ie, key-mgmt = 'none' or 'ieee8021x') indicate the
802.11 authentication algorithm required by the AP here.  One of 'open'
for Open System, 'shared' for Shared Key, or 'leap' for Cisco LEAP.
When using Cisco LEAP (ie, key-mgmt = 'ieee8021x' and auth-alg = 'leap')
the 'leap-username' and 'leap-password' properties must be specified.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--group" role="property"><title>The <literal>&quot;group&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--group"><primary sortas="NMSettingWirelessSecurity:group">NMSettingWirelessSecurity:group</primary></indexterm><programlisting>  &quot;group&quot;                    <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write</programlisting>
<para>
If specified, will only connect to WPA networks that provide the
specified group/multicast encryption capabilities.  Each element may be
one of 'wep40', 'wep104', 'tkip', or 'ccmp'.</para>
<para>
</para></refsect2>
<refsect2 id="NMSettingWirelessSecurity--key-mgmt" role="property"><title>The <literal>&quot;key-mgmt&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--key-mgmt"><primary sortas="NMSettingWirelessSecurity:key-mgmt">NMSettingWirelessSecurity:key-mgmt</primary></indexterm><programlisting>  &quot;key-mgmt&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Key management used for the connection.  One of 'none' (WEP), 'ieee8021x'
(Dynamic WEP), 'wpa-none' (Ad-Hoc WPA-PSK), 'wpa-psk' (infrastructure
WPA-PSK), or 'wpa-eap' (WPA-Enterprise).  This property must be set for
any WiFi connection that uses security.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--leap-password" role="property"><title>The <literal>&quot;leap-password&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--leap-password"><primary sortas="NMSettingWirelessSecurity:leap-password">NMSettingWirelessSecurity:leap-password</primary></indexterm><programlisting>  &quot;leap-password&quot;            <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
The login password for legacy LEAP connections (ie, key-mgmt =
'ieee8021x' and auth-alg = 'leap').</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--leap-username" role="property"><title>The <literal>&quot;leap-username&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--leap-username"><primary sortas="NMSettingWirelessSecurity:leap-username">NMSettingWirelessSecurity:leap-username</primary></indexterm><programlisting>  &quot;leap-username&quot;            <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
The login username for legacy LEAP connections (ie, key-mgmt =
'ieee8021x' and auth-alg = 'leap').</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--pairwise" role="property"><title>The <literal>&quot;pairwise&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--pairwise"><primary sortas="NMSettingWirelessSecurity:pairwise">NMSettingWirelessSecurity:pairwise</primary></indexterm><programlisting>  &quot;pairwise&quot;                 <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write</programlisting>
<para>
If specified, will only connect to WPA networks that provide the
specified pairwise encryption capabilities.  Each element may be one of
'wep40', 'wep104', 'tkip', or 'ccmp'.</para>
<para>
</para></refsect2>
<refsect2 id="NMSettingWirelessSecurity--proto" role="property"><title>The <literal>&quot;proto&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--proto"><primary sortas="NMSettingWirelessSecurity:proto">NMSettingWirelessSecurity:proto</primary></indexterm><programlisting>  &quot;proto&quot;                    <link linkend="GSList-gchararray-">GSList_gchararray_</link>*   : Read / Write</programlisting>
<para>
List of strings specifying the allowed WPA protocol versions to use.
Each element may be one 'wpa' (allow WPA) or 'rsn' (allow WPA2/RSN).  If
not specified, both WPA and RSN connections are allowed.</para>
<para>
</para></refsect2>
<refsect2 id="NMSettingWirelessSecurity--psk" role="property"><title>The <literal>&quot;psk&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--psk"><primary sortas="NMSettingWirelessSecurity:psk">NMSettingWirelessSecurity:psk</primary></indexterm><programlisting>  &quot;psk&quot;                      <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Pre-Shared-Key for WPA networks.  If the key is 64-characters long, it
must contain only hexadecimal characters and is interpreted as a
hexadecimal WPA key.  Otherwise, the key must be between 8 and 63 ASCII
characters (as specified in the 802.11i standard) and is interpreted as
a WPA passphrase, and is hashed to derive the actual WPA-PSK used when
connecting to the WiFi network.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--wep-key-type" role="property"><title>The <literal>&quot;wep-key-type&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--wep-key-type"><primary sortas="NMSettingWirelessSecurity:wep-key-type">NMSettingWirelessSecurity:wep-key-type</primary></indexterm><programlisting>  &quot;wep-key-type&quot;             <link linkend="guint">guint</link>                 : Read / Write / Construct</programlisting>
<para>
Controls the interpretation of WEP keys.  Allowed values are 1 (interpret
WEP keys as hexadecimal or ASCII keys) or 2 (interpret WEP keys as WEP
Passphrases).  If set to 1 and the keys are hexadecimal, they must be
either 10 or 26 characters in length.  If set to 1 and the keys are
ASCII keys, they must be either 5 or 13 characters in length.  If set to
2, the passphrase is hashed using the de-facto MD5 method to derive the
actual WEP key.</para>
<para>
</para><para>Allowed values: &lt;= 2</para>
<para>Default value: 0</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--wep-key0" role="property"><title>The <literal>&quot;wep-key0&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--wep-key0"><primary sortas="NMSettingWirelessSecurity:wep-key0">NMSettingWirelessSecurity:wep-key0</primary></indexterm><programlisting>  &quot;wep-key0&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Index 0 WEP key.  This is the WEP key used in most networks.  See the
'wep-key-type' property for a description of how this key is interpreted.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--wep-key1" role="property"><title>The <literal>&quot;wep-key1&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--wep-key1"><primary sortas="NMSettingWirelessSecurity:wep-key1">NMSettingWirelessSecurity:wep-key1</primary></indexterm><programlisting>  &quot;wep-key1&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Index 1 WEP key.  This WEP index is not used by most networks.  See the
'wep-key-type' property for a description of how this key is interpreted.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--wep-key2" role="property"><title>The <literal>&quot;wep-key2&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--wep-key2"><primary sortas="NMSettingWirelessSecurity:wep-key2">NMSettingWirelessSecurity:wep-key2</primary></indexterm><programlisting>  &quot;wep-key2&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Index 2 WEP key.  This WEP index is not used by most networks.  See the
'wep-key-type' property for a description of how this key is interpreted.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--wep-key3" role="property"><title>The <literal>&quot;wep-key3&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--wep-key3"><primary sortas="NMSettingWirelessSecurity:wep-key3">NMSettingWirelessSecurity:wep-key3</primary></indexterm><programlisting>  &quot;wep-key3&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>
Index 3 WEP key.  This WEP index is not used by most networks.  See the
'wep-key-type' property for a description of how this key is interpreted.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="NMSettingWirelessSecurity--wep-tx-keyidx" role="property"><title>The <literal>&quot;wep-tx-keyidx&quot;</literal> property</title>
<indexterm zone="NMSettingWirelessSecurity--wep-tx-keyidx"><primary sortas="NMSettingWirelessSecurity:wep-tx-keyidx">NMSettingWirelessSecurity:wep-tx-keyidx</primary></indexterm><programlisting>  &quot;wep-tx-keyidx&quot;            <link linkend="guint">guint</link>                 : Read / Write / Construct</programlisting>
<para>
When static WEP is used (ie, key-mgmt = 'none') and a non-default WEP key
index is used by the AP, put that WEP key index here.  Valid values are 0
(default key) through 3.  Note that some consumer access points (like the
Linksys WRT54G) number the keys 1 - 4.</para>
<para>
</para><para>Allowed values: &lt;= 3</para>
<para>Default value: 0</para>
</refsect2>
</refsect1>




</refentry>
