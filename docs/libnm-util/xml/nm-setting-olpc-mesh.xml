<refentry id="NMSettingOlpcMesh">
<refmeta>
<refentrytitle role="top_of_page" id="NMSettingOlpcMesh.top_of_page">NMSettingOlpcMesh</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNM-UTIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>NMSettingOlpcMesh</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="NMSettingOlpcMesh.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="NM-SETTING-OLPC-MESH-SETTING-NAME--CAPS">NM_SETTING_OLPC_MESH_SETTING_NAME</link>
enum                <link linkend="NMSettingOlpcMeshError">NMSettingOlpcMeshError</link>;
#define             <link linkend="NM-TYPE-SETTING-OLPC-MESH-ERROR--CAPS">NM_TYPE_SETTING_OLPC_MESH_ERROR</link>
#define             <link linkend="NM-SETTING-OLPC-MESH-ERROR--CAPS">NM_SETTING_OLPC_MESH_ERROR</link>
<link linkend="GQuark">GQuark</link>              <link linkend="nm-setting-olpc-mesh-error-quark">nm_setting_olpc_mesh_error_quark</link>    (void);
#define             <link linkend="NM-SETTING-OLPC-MESH-SSID--CAPS">NM_SETTING_OLPC_MESH_SSID</link>
#define             <link linkend="NM-SETTING-OLPC-MESH-CHANNEL--CAPS">NM_SETTING_OLPC_MESH_CHANNEL</link>
#define             <link linkend="NM-SETTING-OLPC-MESH-DHCP-ANYCAST-ADDRESS--CAPS">NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS</link>
                    <link linkend="NMSettingOlpcMesh-struct">NMSettingOlpcMesh</link>;
<link linkend="GType">GType</link>               <link linkend="nm-setting-olpc-mesh-get-type">nm_setting_olpc_mesh_get_type</link>       (void);
<link linkend="NMSetting">NMSetting</link> *         <link linkend="nm-setting-olpc-mesh-new">nm_setting_olpc_mesh_new</link>            (void);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-olpc-mesh-get-ssid">nm_setting_olpc_mesh_get_ssid</link>       (<link linkend="NMSettingOlpcMesh">NMSettingOlpcMesh</link> *setting);
<link linkend="guint32">guint32</link>             <link linkend="nm-setting-olpc-mesh-get-channel">nm_setting_olpc_mesh_get_channel</link>    (<link linkend="NMSettingOlpcMesh">NMSettingOlpcMesh</link> *setting);
const <link linkend="GByteArray">GByteArray</link> *  <link linkend="nm-setting-olpc-mesh-get-dhcp-anycast-address">nm_setting_olpc_mesh_get_dhcp_anycast_address</link>
                                                        (<link linkend="NMSettingOlpcMesh">NMSettingOlpcMesh</link> *setting);
</synopsis>
</refsynopsisdiv>

<refsect1 id="NMSettingOlpcMesh.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="NMSetting">NMSetting</link>
         +----NMSettingOlpcMesh
</synopsis>
</refsect1>





<refsect1 id="NMSettingOlpcMesh.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="NMSettingOlpcMesh--channel">channel</link>&quot;                  <link linkend="guint">guint</link>                 : Read / Write / Construct
  &quot;<link linkend="NMSettingOlpcMesh--dhcp-anycast-address">dhcp-anycast-address</link>&quot;     <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
  &quot;<link linkend="NMSettingOlpcMesh--ssid">ssid</link>&quot;                     <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write
</synopsis>
</refsect1>



<refsect1 id="NMSettingOlpcMesh.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="NMSettingOlpcMesh.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="NM-SETTING-OLPC-MESH-SETTING-NAME--CAPS" role="macro">
<title>NM_SETTING_OLPC_MESH_SETTING_NAME</title>
<indexterm zone="NM-SETTING-OLPC-MESH-SETTING-NAME--CAPS"><primary sortas="NM_SETTING_OLPC_MESH_SETTING_NAME">NM_SETTING_OLPC_MESH_SETTING_NAME</primary></indexterm><programlisting>#define NM_SETTING_OLPC_MESH_SETTING_NAME "802-11-olpc-mesh"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSettingOlpcMeshError" role="enum">
<title>enum NMSettingOlpcMeshError</title>
<indexterm zone="NMSettingOlpcMeshError"><primary sortas="NMSettingOlpcMeshError">NMSettingOlpcMeshError</primary></indexterm><programlisting>typedef enum
{
	NM_SETTING_OLPC_MESH_ERROR_UNKNOWN = 0,
	NM_SETTING_OLPC_MESH_ERROR_INVALID_PROPERTY,
	NM_SETTING_OLPC_MESH_ERROR_MISSING_PROPERTY
} NMSettingOlpcMeshError;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-TYPE-SETTING-OLPC-MESH-ERROR--CAPS" role="macro">
<title>NM_TYPE_SETTING_OLPC_MESH_ERROR</title>
<indexterm zone="NM-TYPE-SETTING-OLPC-MESH-ERROR--CAPS"><primary sortas="NM_TYPE_SETTING_OLPC_MESH_ERROR">NM_TYPE_SETTING_OLPC_MESH_ERROR</primary></indexterm><programlisting>#define NM_TYPE_SETTING_OLPC_MESH_ERROR (nm_setting_olpc_mesh_error_get_type ()) 
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-OLPC-MESH-ERROR--CAPS" role="macro">
<title>NM_SETTING_OLPC_MESH_ERROR</title>
<indexterm zone="NM-SETTING-OLPC-MESH-ERROR--CAPS"><primary sortas="NM_SETTING_OLPC_MESH_ERROR">NM_SETTING_OLPC_MESH_ERROR</primary></indexterm><programlisting>#define NM_SETTING_OLPC_MESH_ERROR nm_setting_olpc_mesh_error_quark ()
</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-olpc-mesh-error-quark" role="function">
<title>nm_setting_olpc_mesh_error_quark ()</title>
<indexterm zone="nm-setting-olpc-mesh-error-quark"><primary sortas="nm_setting_olpc_mesh_error_quark">nm_setting_olpc_mesh_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              nm_setting_olpc_mesh_error_quark    (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="NM-SETTING-OLPC-MESH-SSID--CAPS" role="macro">
<title>NM_SETTING_OLPC_MESH_SSID</title>
<indexterm zone="NM-SETTING-OLPC-MESH-SSID--CAPS"><primary sortas="NM_SETTING_OLPC_MESH_SSID">NM_SETTING_OLPC_MESH_SSID</primary></indexterm><programlisting>#define NM_SETTING_OLPC_MESH_SSID                 "ssid"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-OLPC-MESH-CHANNEL--CAPS" role="macro">
<title>NM_SETTING_OLPC_MESH_CHANNEL</title>
<indexterm zone="NM-SETTING-OLPC-MESH-CHANNEL--CAPS"><primary sortas="NM_SETTING_OLPC_MESH_CHANNEL">NM_SETTING_OLPC_MESH_CHANNEL</primary></indexterm><programlisting>#define NM_SETTING_OLPC_MESH_CHANNEL              "channel"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NM-SETTING-OLPC-MESH-DHCP-ANYCAST-ADDRESS--CAPS" role="macro">
<title>NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS</title>
<indexterm zone="NM-SETTING-OLPC-MESH-DHCP-ANYCAST-ADDRESS--CAPS"><primary sortas="NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS">NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS</primary></indexterm><programlisting>#define NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS "dhcp-anycast-address"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="NMSettingOlpcMesh-struct" role="struct">
<title>NMSettingOlpcMesh</title>
<indexterm zone="NMSettingOlpcMesh-struct"><primary sortas="NMSettingOlpcMesh">NMSettingOlpcMesh</primary></indexterm><programlisting>typedef struct _NMSettingOlpcMesh NMSettingOlpcMesh;</programlisting>
<para>
</para></refsect2>
<refsect2 id="nm-setting-olpc-mesh-get-type" role="function">
<title>nm_setting_olpc_mesh_get_type ()</title>
<indexterm zone="nm-setting-olpc-mesh-get-type"><primary sortas="nm_setting_olpc_mesh_get_type">nm_setting_olpc_mesh_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               nm_setting_olpc_mesh_get_type       (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-olpc-mesh-new" role="function">
<title>nm_setting_olpc_mesh_new ()</title>
<indexterm zone="nm-setting-olpc-mesh-new"><primary sortas="nm_setting_olpc_mesh_new">nm_setting_olpc_mesh_new</primary></indexterm><programlisting><link linkend="NMSetting">NMSetting</link> *         nm_setting_olpc_mesh_new            (void);</programlisting>
<para>
Creates a new <link linkend="NMSettingOlpcMesh"><type>NMSettingOlpcMesh</type></link> object with default values.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new empty <link linkend="NMSettingOlpcMesh"><type>NMSettingOlpcMesh</type></link> object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-olpc-mesh-get-ssid" role="function">
<title>nm_setting_olpc_mesh_get_ssid ()</title>
<indexterm zone="nm-setting-olpc-mesh-get-ssid"><primary sortas="nm_setting_olpc_mesh_get_ssid">nm_setting_olpc_mesh_get_ssid</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_olpc_mesh_get_ssid       (<link linkend="NMSettingOlpcMesh">NMSettingOlpcMesh</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-olpc-mesh-get-channel" role="function">
<title>nm_setting_olpc_mesh_get_channel ()</title>
<indexterm zone="nm-setting-olpc-mesh-get-channel"><primary sortas="nm_setting_olpc_mesh_get_channel">nm_setting_olpc_mesh_get_channel</primary></indexterm><programlisting><link linkend="guint32">guint32</link>             nm_setting_olpc_mesh_get_channel    (<link linkend="NMSettingOlpcMesh">NMSettingOlpcMesh</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="nm-setting-olpc-mesh-get-dhcp-anycast-address" role="function">
<title>nm_setting_olpc_mesh_get_dhcp_anycast_address ()</title>
<indexterm zone="nm-setting-olpc-mesh-get-dhcp-anycast-address"><primary sortas="nm_setting_olpc_mesh_get_dhcp_anycast_address">nm_setting_olpc_mesh_get_dhcp_anycast_address</primary></indexterm><programlisting>const <link linkend="GByteArray">GByteArray</link> *  nm_setting_olpc_mesh_get_dhcp_anycast_address
                                                        (<link linkend="NMSettingOlpcMesh">NMSettingOlpcMesh</link> *setting);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>setting</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="NMSettingOlpcMesh.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="NMSettingOlpcMesh--channel" role="property"><title>The <literal>&quot;channel&quot;</literal> property</title>
<indexterm zone="NMSettingOlpcMesh--channel"><primary sortas="NMSettingOlpcMesh:channel">NMSettingOlpcMesh:channel</primary></indexterm><programlisting>  &quot;channel&quot;                  <link linkend="guint">guint</link>                 : Read / Write / Construct</programlisting>
<para>
Channel on which the mesh network to join is located.</para>
<para>
</para><para>Default value: 0</para>
</refsect2>
<refsect2 id="NMSettingOlpcMesh--dhcp-anycast-address" role="property"><title>The <literal>&quot;dhcp-anycast-address&quot;</literal> property</title>
<indexterm zone="NMSettingOlpcMesh--dhcp-anycast-address"><primary sortas="NMSettingOlpcMesh:dhcp-anycast-address">NMSettingOlpcMesh:dhcp-anycast-address</primary></indexterm><programlisting>  &quot;dhcp-anycast-address&quot;     <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
Anycast DHCP address used when requesting an IP address via DHCP.  The
specific anycast address used determines which DHCP server class answers
the request.</para>
<para>
</para></refsect2>
<refsect2 id="NMSettingOlpcMesh--ssid" role="property"><title>The <literal>&quot;ssid&quot;</literal> property</title>
<indexterm zone="NMSettingOlpcMesh--ssid"><primary sortas="NMSettingOlpcMesh:ssid">NMSettingOlpcMesh:ssid</primary></indexterm><programlisting>  &quot;ssid&quot;                     <link linkend="GArray-guchar-">GArray_guchar_</link>*       : Read / Write</programlisting>
<para>
SSID of the mesh network to join.</para>
<para>
</para></refsect2>
</refsect1>




</refentry>
